#Область COM

Процедура ЗагрузкаДанныхВнешнихБаз(ПараметрыВыполнения, АдресРезультата) Экспорт
    
	//РезультатВыполнения = Новый Структура;
	//IBSession = ПараметрыВыполнения.IBSession; 
	//ПараметрыЗапроса = Новый Структура("ВходящиеПараметры", ЗначениеВСтрокуВнутр(ПараметрыВыполнения));
	//
	////http 
	//Сообщение = "";
	//Результат = ПолучитьДанныеПоAPI(Перечисления.ТипОрганизации.Фабрика, ПараметрыЗапроса, IBSession, Сообщение);
	//ДобавитьСообщениеВРезультат(РезультатВыполнения, Сообщение);
	//
	//ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресРезультата);
	//
	//Если Результат = Неопределено Тогда Возврат КонецЕсли;
	//
КонецПроцедуры

Процедура ДобавитьСообщениеВРезультат(РезультатВыполнения, ТекстСообщения)
        
    //
    Если Не РезультатВыполнения.Свойство("ВыводСообщений") Тогда
        РезультатВыполнения.Вставить("ВыводСообщений", Новый Массив);        
    КонецЕсли;    
    
    //                                                     
    МассивСообщений = РезультатВыполнения.ВыводСообщений;
    Сообщение = Новый Структура("Использование, Текст, ПутьКРеквизитуФормы", Истина, ТекстСообщения); 
    МассивСообщений.Добавить(Новый Структура("ВыводСообщения", Сообщение));        
    
КонецПроцедуры

#КонецОбласти



#Область HTTP
// Функция - Получить данные по API
//
// Параметры:
//  База         -      - 
//  Параметры     -  - 
//  IBSession     -  - 
//  Сообщение     -  - 
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьДанныеПоAPI(База, Параметры, ХранилищеСессий, Сообщение = "") Экспорт
	
	//Получим параметры сессии
	ПараметрыСессии = ПолучитьПараметрыСессии(База, ХранилищеСессий);
	
    //Получим параметры подключения
    Отбор = Новый Структура("ТипОрганизации, ТипСоединения", База, Перечисления.ТипСоединения.Http);
    ПодключениеHTTP = РегистрыСведений.НастройкаПодключенийКБазам.Получить(Отбор);    
    
    //Нет настроек для Http соединения
    Если ПустаяСтрока(ПодключениеHTTP.СерверComОбъекта) Тогда
        Сообщение = Строка(База) + ": не настроена для Http соединения!!!";
        Возврат Неопределено;
    КонецЕсли;  
    
    Сервер = ПодключениеHTTP.СерверComОбъекта;
    ПутьДоHttpСервисаСпараметрами = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ПодключениеHTTP.СтрокаПодключения, Параметры);
	
	Аутентификация = Новый Структура("Пользователь, Пароль", ПодключениеHTTP.Пользователь, ПодключениеHTTP.Пароль);
	ПараметрыПреобразованияJSON = Новый Структура("ПрочитатьВСоответствие, ИменаСвойствСоЗначениямиДата", Ложь, "Период,Дата,День,ОплатитьДо");
	ДопПараметры = Новый Структура("Аутентификация, Заголовки, Таймаут, ПараметрыПреобразованияJSON", Аутентификация, ПараметрыСессии.headers, 100, ПараметрыПреобразованияJSON);		
	
	Попытка
		Результат = БОНД_Коннектор.PostJson(Сервер + "/" + ПутьДоHttpСервисаСпараметрами, Параметры, ДопПараметры, ПараметрыСессии.ХранилищеСессий[База]);
		//---<>---
		Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("ТекстОшибки") Тогда ВызватьИсключение Результат.ТекстОшибки КонецЕсли;
		//---<>---	
		Сообщение = Строка(База) + ": обработано!!!";					
		ПараметрыСессии.ХранилищеСессий[База].СлужебныеДанные = Новый Структура("ПараметрыDigest"); 
		Возврат Результат;   	
	Исключение
		ПараметрыСессии.ХранилищеСессий[База] = Новый Структура;
		Сообщение = Строка(База) + ":" + ОписаниеОшибки();
		Возврат Неопределено;                            
	КонецПопытки;                    	
	
КонецФункции  

// Функция - Получить параметры сессии (если базы нет в Хранилище сессий, то создаётся новое временное хранилище)
//
// Параметры:
//  База	 -  Перечисление.ТипОрганизации
//  ХранилищеСессий	 - Соответствие с ключами типа Перечисление.ТипОрганизации и значением типа Структура (параметры сессии)  
// 
// Возвращаемое значение:
//   Структура с ключами ХранилищеСессий и Headers 
//
Функция ПолучитьПараметрыСессии(База, знач ХранилищеСессий)
	
	//Определим есть ли идентификатор сессии                           
	Если ХранилищеСессий[База] = Неопределено Тогда
		ХранилищеСессий = Новый Соответствие;
		ХранилищеСессий.Вставить(База, БОНД_Коннектор.СоздатьСессию());	
	КонецЕсли;
		
	//Установим headers
	headers = Новый Соответствие;
		
	Если ХранилищеСессий[База].Количество() = 0 Тогда
		headers.Вставить("IBSession", "start");
		ХранилищеСессий[База] = БОНД_Коннектор.СоздатьСессию(); 
	КонецЕсли;	
				
	Возврат Новый Структура("ХранилищеСессий, headers", ХранилищеСессий, headers);	


КонецФункции

#КонецОбласти

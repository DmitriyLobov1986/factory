#Область РаботаСРеестрамиПлатежей


//Консолидирует все реестры платежей за выбранный период в единую таблицу
//ПериодВыборки - Тип: Станартный период 
//ТипРеестра - Тип: Булево (Истина - реестры базы закупок, Ложь - реестры российской бухгалтерии)
//Отбор - Тип: Массив (Структура с ключами Колонка, ВидСравнения, Значение - для передачи в функцию "ОбщийМодульСервер.ПолучитьСложныйОтборТЗ"); 
//ИнтерактивныеРеестры - Тип: Массив - реестры интерактивно выбранные пользователем
//АдресВременногоХранилища - Тип: Строка - если Пустая строка, то функция вернёт ТаблицуЗначений, иначе положит результат во временное хранилище 
Функция ПолучитьОбщийРеестрЗаПериод(ПериодВыборки = Неопределено, 
	                                Глоссаб = Неопределено, 
									ДополнительныйОтбор = Неопределено, 
									ИнтерактивныеРеестры = Неопределено,
									АдресВременногоХранилища = "") Экспорт
	
	//
	Таблица = Новый ТаблицаЗначений;
	
	//
	Если ИнтерактивныеРеестры = Неопределено Тогда
		
	  Запрос = Новый Запрос;
	  Запрос.Текст = "ВЫБРАТЬ
	               |	СогласованиеРеестраПлатежей.Дата,
	               |	СогласованиеРеестраПлатежей.Ссылка
	               |ИЗ
	               |	БизнесПроцесс.СогласованиеРеестраПлатежей КАК СогласованиеРеестраПлатежей
	               |ГДЕ
	               |	СогласованиеРеестраПлатежей.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И СогласованиеРеестраПлатежей.Глоссаб = &Глоссаб
	               |	И СогласованиеРеестраПлатежей.ПометкаУдаления = ЛОЖЬ";
	
	
	  Запрос.УстановитьПараметр("ДатаОкончания", ПериодВыборки.ДатаОкончания);
	  Запрос.УстановитьПараметр("ДатаНачала", ПериодВыборки.ДатаНачала);
	  Запрос.УстановитьПараметр("Глоссаб", Глоссаб);
	
	  МассивРеестров = Запрос.Выполнить().Выгрузить();
		
	Иначе
	  МассивРеестров = ИнтерактивныеРеестры;
		
	КонецЕсли; 
	
	//
	Для Каждого ОтдельныйРеестр ИЗ МассивРеестров Цикл
		//
		ТЗРеестр = ОтдельныйРеестр.Ссылка.ХранилищеРеестраПлатежей.Получить();
		//
		Если Таблица.Колонки.Количество() = 0 Тогда
			Таблица = ТЗРеестр.СкопироватьКолонки();
		КонецЕсли;	
		//	
		Отбор = Новый Массив;
		Отбор.Добавить(Новый Структура("Колонка, ВидСравнения, Значение", "Дата", ВидСравнения.Равно, НачалоДня(ОтдельныйРеестр.Дата)));  
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Отбор, ДополнительныйОтбор, Истина);
		//
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОбщийМодульСервер.ПолучитьСложныйОтборТЗ(ТЗРеестр, , Отбор), Таблица);
	КонецЦикла;
	
	
	//
	Если НЕ ЭтоАдресВременногоХранилища(АдресВременногоХранилища) Тогда
		Возврат Таблица;
	Иначе ПоместитьВоВременноеХранилище(Таблица, АдресВременногоХранилища);
	КонецЕсли;  

	

КонецФункции

#КонецОбласти
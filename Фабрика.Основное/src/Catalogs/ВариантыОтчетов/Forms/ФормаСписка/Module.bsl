
&НаКлиенте
Процедура Расш1_СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если РежимРаботыФормы = "Выбор" Тогда
		СтандартнаяОбработка = Ложь;
		Закрыть(Новый Структура("КлючВарианта, Наименование", Элемент.ТекущиеДанные.КлючВарианта, Элемент.ТекущиеДанные.Наименование));	
	КонецЕсли;
	
	//УстановитьВыполнениеОбработчиковСобытия(Ложь);
	
	
КонецПроцедуры


&НаСервере
Процедура Расш1_ПриСозданииНаСервереВместо(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВключаяПодчиненные = Истина;
	
	//КорневаяПодсистема = Справочники.ИдентификаторыОбъектовМетаданных.Подсистемы;
	ДеревоЗначений = ВариантыОтчетовПовтИсп.ПодсистемыТекущегоПользователя();
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоПодсистем");
	
	ДеревоПодсистемТекущаяСтрока = -1;
	Элементы.ДеревоПодсистем.ТекущаяСтрока = 0;
	Если Параметры.РежимВыбора = Истина Тогда
		РежимРаботыФормы = "Выбор";
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ИначеЕсли Параметры.Свойство("РазделСсылка") Тогда
		РежимРаботыФормы = "ВсеОтчетыРаздела";
		МассивОбхода = Новый Массив;
		МассивОбхода.Добавить(ДеревоПодсистем.ПолучитьЭлементы()[0]);
		Пока МассивОбхода.Количество() > 0 Цикл
			СтрокиРодителя = МассивОбхода[0].ПолучитьЭлементы();
			МассивОбхода.Удалить(0);
			Для Каждого СтрокаДерева Из СтрокиРодителя Цикл
				Если СтрокаДерева.Ссылка = Параметры.РазделСсылка Тогда
					Элементы.ДеревоПодсистем.ТекущаяСтрока = СтрокаДерева.ПолучитьИдентификатор();
					МассивОбхода.Очистить();
					Прервать;
				Иначе
					МассивОбхода.Добавить(СтрокаДерева);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Иначе
		РежимРаботыФормы = "Список";
		Элементы.Изменить.Отображение = ОтображениеКнопки.КартинкаИТекст;
		Элементы.РазместитьВРазделах.ТолькоВоВсехДействиях = Ложь;
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = РежимРаботыФормы;
	КлючНазначенияИспользования = РежимРаботыФормы;
	
	УстановитьСвойствоСпискаПоПараметруФормы("РежимВыбора");
	УстановитьСвойствоСпискаПоПараметруФормы("ВыборГруппИЭлементов");
	УстановитьСвойствоСпискаПоПараметруФормы("МножественныйВыбор");
	УстановитьСвойствоСпискаПоПараметруФормы("ТекущаяСтрока");
	
	//Если Параметры.РежимВыбора Тогда
	//	Элементы.Выбрать.КнопкаПоУмолчанию = Истина;
	//Иначе
	//	Элементы.Выбрать.Видимость = Ложь;
	//КонецЕсли;
	
	ПолныеПраваНаВарианты = ВариантыОтчетов.ПолныеПраваНаВарианты();
	Если НЕ ПолныеПраваНаВарианты Тогда
		Элементы.ОтборТипОтчета.Видимость = Ложь;
	КонецЕсли;
	
	СписокВыбора = Элементы.ОтборТипОтчета.СписокВыбора;
	СписокВыбора.Добавить(1, НСтр("ru = 'Внутренние и Дополнительные'"));
	СписокВыбора.Добавить(Перечисления.ТипыОтчетов.Внутренний, НСтр("ru = 'Внутренние'"));
	СписокВыбора.Добавить(Перечисления.ТипыОтчетов.Дополнительный, НСтр("ru = 'Дополнительные'"));
	СписокВыбора.Добавить(Перечисления.ТипыОтчетов.Внешний, НСтр("ru = 'Внешние'"));
	
	Если Параметры.Отбор.Свойство("ТипОтчета", ОтборТипОтчета) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОтборТипОтчета", ОтборТипОтчета);
		Параметры.Отбор.Удалить("ТипОтчета");
	КонецЕсли;
	
	ОтчетыПользователя = Новый ФиксированныйМассив(ВариантыОтчетов.ОтчетыТекущегоПользователя());
	ОтключенныеВариантыПрограммы = Новый ФиксированныйМассив(ВариантыОтчетовПовтИсп.ОтключенныеВариантыПрограммы());
	
	ДеревоПодсистемУстановитьПараметрыСписка();
	
	Список.Параметры.УстановитьЗначениеПараметра("ТипВнутренний",       Перечисления.ТипыОтчетов.Внутренний);
	Список.Параметры.УстановитьЗначениеПараметра("ТипДополнительный",   Перечисления.ТипыОтчетов.Дополнительный);
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтборНаименование",  ОтборНаименование);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборАвтор",         ОтборАвтор);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборТипОтчета",     ОтборТипОтчета);
	
	ТекущийЭлемент = Элементы.Список;
	
	// Установка отбора динамического списка.
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ПометкаУдаления", Ложь, ВидСравненияКомпоновкиДанных.Равно, , ,
		РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	
КонецПроцедуры


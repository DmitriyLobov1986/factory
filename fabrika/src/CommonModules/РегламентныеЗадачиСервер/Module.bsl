//////////////////////////////////////РЕГЛАМЕНТНЫЕ ЗАДАНИЯ//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////


////Дима 14.07.2014 10:40:52////Загрузка пополнения таможенных карт
Процедура ЗагрузкаДвиженийПоТаможне() Экспорт 

  //Получим подключение к базе
  СтрутураПодключений = Новый Структура;
  АдресСтруктурыПодключений = ПоместитьВоВременноеХранилище(СтрутураПодключений);
  ПодключениеКВнешнимИБ.ПроверкаПодключения(Перечисления.ТипОрганизации.Торговля, АдресСтруктурыПодключений);
  
  //Запуск обработки загрузки платежей
  Период = Новый СтандартныйПериод;
  Период.ДатаНачала = ОбщийМодульСервер.ГраницаПериодаЗагрузки();
  Период.ДатаОкончания = ТекущаяДата();
  
  //Создадим обработку для загрузки
  Ссылка = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию("Загрузка/Выгрузка платежей в бухгалтерию");
  ИмяОбработки = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(Ссылка);
  Обработка = ВнешниеОбработки.Создать(ИмяОбработки);	
  
  //Создадим обработку для работы с Битрикс
  СсылкаБитрикс = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию("Telegram");
  ИмяОбработки = ДополнительныеОтчетыИОбработкиВызовСервера.ПодключитьВнешнююОбработку(СсылкаБитрикс);
  Битрикс = ВнешниеОбработки.Создать(ИмяОбработки);
  Битрикс.ЗаполнитьНастройкиTelegram();
  
  //Пополнение карт
  СписокБаз = Новый СписокЗначений;
  СписокБаз.Добавить(Перечисления.ТипОрганизации.Таможня,, Истина);
  СписокБаз.Добавить(Перечисления.ТипОрганизации.Розница,, Истина);
  СписокБаз.Добавить(Перечисления.ТипОрганизации.Опт,, Истина);
  //
  Обработка.ЗагрузкаПополненияКарт(СписокБаз, АдресСтруктурыПодключений, Период);
  Обработка.СоздатьДокументыПополнения(Период, "ПополнениеКарт");
  
  
  
  ////Таможня взаиморассчёты
  //Обработка.ЗагрузкаРассчётовПоТаможне(Период);
  //Обработка.СоздатьДокументыПополнения(Период, "ТаможняРассчёты");
  
  
  //Приход машин
  //ЗаявкиНаМашины = Документы.ЗаявкаНаМашину.Выбрать(ОбщийМодульСервер.ГраницаПериодаЗагрузки());
  Запрос = Новый Запрос;
  Запрос.Текст = "ВЫБРАТЬ
                 |	ЗаявкаНаМашину.Ссылка КАК Ссылка
                 |ИЗ
                 |	Документ.ЗаявкаНаМашину КАК ЗаявкаНаМашину
                 |ГДЕ
                 |	ЗаявкаНаМашину.Проведен
                 |	И ЗаявкаНаМашину.ДатаПрихода МЕЖДУ &НачалоПериода И &КонецПериода
                 |	И НЕ ЗаявкаНаМашину.ПометкаУдаления";
  
  Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
  Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
  
  ЗаявкиНаМашины = Запрос.Выполнить().Выбрать();
  
  СписокДокументов = Новый Массив;
  
  Пока ЗаявкиНаМашины.Следующий() Цикл
	  СписокДокументов.Добавить(ЗаявкиНаМашины.Ссылка);
  КонецЦикла;  
  
  //
  ТаможняСервер.ЗагрузкаДанных(АдресСтруктурыПодключений, СписокДокументов); 
  
  
  //Проверка остатка на таможенных картах
  ТаможняСервер.ПроверкаОстатковНаКартах(Битрикс);  
  
  
  
  /////////////////ОТПРАВИТЬ ПО ПОЧТЕ РЕЗУЛЬТАТЫ ЗАГРУЗКИ///////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////////////////////
  
  #Область ПочтоваяОтправка
  
  Сообщения = ПолучитьСообщенияПользователю(Истина);
  
  Если Сообщения.Количество() = 0 Тогда
	  возврат;
  КонецЕсли;	  
  
  Отчет = Новый ТабличныйДокумент;
  Отчет.ОтображатьСетку = Ложь;
  
  Макет = ПолучитьОбщийМакет("МакетПисем");
  
  облЗаголовок = Макет.ПолучитьОбласть("Заголовок");
  облЗаголовок.Параметры.ДатаВремя = ТекущаяДата();
  Отчет.Вывести(облЗаголовок);
  
  облШапка = Макет.ПолучитьОбласть("Шапка");
  облСтроки = Макет.ПолучитьОбласть("Строки");
  
  Отчет.НачатьАвтогруппировкуСтрок();
  ТипДокумента = Неопределено;
  Документ = Неопределено;
  
  СчётчикДокументов = 0;  
  Для каждого Сообщение из Сообщения Цикл
	  
	  Если Сообщение.КлючДанных = Неопределено Тогда
		  Продолжить;
	  КонецЕсли;	  
	  
	  
	  Если ТипДокумента <> ТипЗнч(сообщение.КлючДанных) Тогда 
		  ТипДокумента = ТипЗнч(сообщение.КлючДанных);
		  облШапка.Параметры.ТипДокумента = ТипДокумента;
		  Отчет.Вывести(ОблШапка, 1);
	  КонецЕсли;
	  
	  Если Документ <> сообщение.КлючДанных Тогда
	    //облСтроки.Параметры.Документ =  строка(сообщение.КлючДанных) + " " + Формат(сообщение.КлючДанных.Проведен, "БЛ='Не проведён'; БИ=Проведён");
		Документ = сообщение.КлючДанных;
	    облСтроки.Параметры.Документ =  "   " + строка(сообщение.КлючДанных);
	    Отчет.Вывести(облСтроки, 2);
	  КонецЕсли;	
	  
	  облСтроки.Параметры.Документ =  "     " + строка(сообщение.Текст);
	  Отчет.Вывести(облСтроки, 3);

	  
	  //
	  СчётчикДокументов = СчётчикДокументов + 1;
	  //
	  
  КонецЦикла;
  Отчет.ЗакончитьАвтогруппировкуСтрок();
  
  Если СчётчикДокументов = 0 Тогда
	  Возврат;
  КонецЕсли;	  
  
  
  ИмяВременногоФайла = ПолучитьИмяВременногоФайла("Html");
  Отчет.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.HTML);
  
  //=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>
  
  //Вложения = Новый Соответствие;
  //Вложения.Вставить("Рассылка.DOCX", Новый ДвоичныеДанные(ИмяВременногоФайла));
  
  ТекстовыйДокумент = Новый ТекстовыйДокумент;
  ТекстовыйДокумент.Прочитать(ИмяВременногоФайла);
  //
  
  ПараметрыПисьма = Новый Структура;
  ПараметрыПисьма.Вставить("Кому", "dmitriy.lobov@pochtavip.com");
  ПараметрыПисьма.Вставить("Тема", "Загрузка движений по таможне");
  ПараметрыПисьма.Вставить("Тело", ТекстовыйДокумент.ПолучитьТекст());
  //ПараметрыПисьма.Вставить("Вложения", Вложения);
  ПараметрыПисьма.Вставить("ТипТекста", Перечисления.ТипыТекстовЭлектронныхПисем.HTML);
    		 
  УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("Фабрика");
  РаботаСПочтовымиСообщениями.ОтправитьСообщение(УчетнаяЗапись, ПараметрыПисьма);  
  
  УдалитьФайлы(ИмяВременногоФайла);
  
  #КонецОбласти
  
  //////////////////////////////////////////////////////////////////////////////////////////////////
  //////////////////////////////////////////////////////////////////////////////////////////////////
 
	                                                          	                                                          	                                                          
КонецПроцедуры
//конец Дима


////Дима 29.12.2014 17:39:07////ОбновлениеСправочникаОрганизаций
Процедура ОбновлениеСправочникаОрганизаций() Экспорт
	
	//Получим подключения к базам
	СтрутураПодключений = Новый Структура;
	АдресСтруктурыПодключений = ПоместитьВоВременноеХранилище(СтрутураПодключений);
	ПодключениеКВнешнимИБ.ПроверкаПодключения(Перечисления.ТипОрганизации.Розница, АдресСтруктурыПодключений);
	ПодключениеКВнешнимИБ.ПроверкаПодключения(Перечисления.ТипОрганизации.Опт, АдресСтруктурыПодключений);
	ПодключениеКВнешнимИБ.ПроверкаПодключения(Перечисления.ТипОрганизации.Управление, АдресСтруктурыПодключений);
	ПодключениеКВнешнимИБ.ПроверкаПодключения(Перечисления.ТипОрганизации.Звено, АдресСтруктурыПодключений);
	ПодключениеКВнешнимИБ.ПроверкаПодключения(Перечисления.ТипОрганизации.Упп, АдресСтруктурыПодключений);
	
	//Запуск обработки обновления справочника организаций	
	Обработка = Обработки.ЗагрузкаСправочникаОрганизаций.Создать();
	Обработка.ПолучениеСпискаКЗагрузке(АдресСтруктурыПодключений);
	
КонецПроцедуры
//конец Дима
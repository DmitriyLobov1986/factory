
////Дима 12.02.2015 15:44:06////Распределение по счетам контрагента
&НаСервере
Процедура РаспределитьПоСчетам()

    ОбработкаДДС = РеквизитФормыВЗначение("Объект");
    ОбработкаДДС.РаспределитьПоСчетам(ОстатокНаКонец);

КонецПроцедуры
//конец Дима




//////////////////////////////////////СОБЫТИЯ ФОРМЫ//////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

#Область НастройкаФормы 
	////Дима 14.05.2015 11:42:35////Восстановить настройку размера формы из хранилища
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    Если Параметры.Свойство("КлючРазмераФормы") Тогда
        КлючСохраненияПоложенияОкна = Параметры.КлючРазмераФормы;
        Возврат;
    КонецЕсли;
    //	
    //КлючРазмераФормы =  СтрЗаменить(строка(Новый УникальныйИдентификатор), "-", "_");
    //
    //ОбщийМодульСервер.ЗаписатьКэшНастроекФорм(ЭтаФорма.ИмяФормы, КлючРазмераФормы);
    //ОбщийМодульСервер.УстановитьЭталонныеНастройкиФормы(ЭтаФорма.ИмяФормы, КлючРазмераФормы);
    КлючСохраненияПоложенияОкна = "РазмерФормы";
    ОбщийМодульСервер.УстановитьЭталонныеНастройкиФормы(ЭтаФорма.ИмяФормы, "РазмерФормы");    
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//конец Дима 
#КонецОбласти
    КопироватьДанныеФормы(Параметры.Обработка, ЭтаФорма.Объект);

    ОбработкаДДС = РеквизитФормыВЗначение("Объект");
    ОбработкаДДС.ЗаполнитьДанныеПоСчетам();
    ЗначениеВРеквизитФормы(ОбработкаДДС, "Объект");
	
	
	//
    Если ТипЗнч(Объект.Расшифровка.Получатель) = Тип("СправочникСсылка.Контрагенты") Тогда
        Если Объект.Расшифровка.Организация.ВалютныйРассчёт Или Объект.Расшифровка.Получатель.ВалютныйРассчёт Тогда
            ВалютныйРассчёт =  Истина;
        КонецЕсли;
    КонецЕсли;
    //
	
	//
    УстановитьВидимостьКолонок();
	//
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

    СтандартнаяОбработка = Ложь;
    Если ВалютныйРассчёт И Не РазрешеноРедактировать Тогда
        Модифицированность = Ложь;
    КонецЕсли;
    Если Модифицированность Тогда

        Ответ = Вопрос("Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);

        Если Ответ = КодВозвратаДиалога.Да Тогда

            ОпределениеНомераПлатежа();
            РаспределитьПоСчетам();
            ЭтаФорма.ВладелецФормы.Перечитывать = Истина;

        ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
            Отказ = Истина;

        КонецЕсли;

    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКолонок()
	
	////Дима 29.05.2015 15:48:33////Заполним данные конечного остатка по счету организации
    ОстатокНаКонецИсходный = Объект.Расшифровка.ОстатокНаКонец + Объект.РаспределениеПоСчетам.Итог("Сумма");
    ОстатокНаКонец = Объект.Расшифровка.ОстатокНаКонец;
	//конец Дима
    Конвертация = ПредопределенноеЗначение("Справочник.ПолучателиДДС.Конвертация");
    Если Объект.Расшифровка.Получатель <> Конвертация Тогда
		//
        Элементы.РаспределениеПоСчетамВалюта.Видимость = Ложь;
        Элементы.РаспределениеПоСчетамКурс.Видимость = Ложь;
        Элементы.РаспределениеПоСчетамСконвертированнаяСумма.Видимость = Ложь;
//        Элементы.ДоговорКомментарий.Видимость = Истина;
        Элементы.ФормулаКонвертации.Видимость = Ложь;
		//
        Элементы.РаспределениеПоСчетамСчетКонтрагента.Ширина = 30;
        Элементы.РаспределениеПоСчетамДоговорыКонтрагентов.Ширина = 25;
        Элементы.РаспределениеПоСчетамСумма.Ширина = 20;
    Иначе
        ВидыКонвертации.Добавить("СконвертированнаяСумма = Сумма / Курс");
        ВидыКонвертации.Добавить("Сумма = СконвертированнаяСумма * Курс");
        ВидыКонвертации.Добавить("СконвертированнаяСумма = Сумма * Курс");
        ВидыКонвертации.Добавить("Сумма = СконвертированнаяСумма / Курс");
        ВидыКонвертации.Добавить("Курс = СконвертированнаяСумма / Сумма");

        Элементы.РаспределениеПоСчетамКомментарий.СписокВыбора.Добавить("Курс дилера");
        Элементы.РаспределениеПоСчетамСконвертированнаяСумма.ЦветФонаЗаголовка = WebЦвета.Охра;

        Если Объект.Расшифровка.СчетОрганизации.Валюта.Код = "643" Тогда
            Элементы.ФормулаКонвертации.Заголовок = ВидыКонвертации[0];
        Иначе
            Элементы.ФормулаКонвертации.Заголовок = ВидыКонвертации[2];
        КонецЕсли;

    КонецЕсли;
    Если ВалютныйРассчёт Тогда
        Элементы.ФормаРедактироватьВалютныйПлатеж.Видимость = Истина;
        Элементы.РаспределениеПоСчетамСумма.Доступность = Ложь;
        Элементы.РаспределениеПоСчетамСуммаКонтекстноеМенюРедактироватьСумму.Видимость = Истина;
    КонецЕсли;	
	
	
	//
    Если Объект.Расшифровка.ТипДвижения = ПредопределенноеЗначение("Перечисление.ТипДвиженияДДС.Поступление") Тогда
        Элементы.РаспределениеПоСчетамСчетКонтрагента.Заголовок = "Счёт организации";
    КонецЕсли;
	//
		
			
	////Дима 05.08.2015 17:30:04////Заполним данные по Получателю
    Контрагент = Объект.Расшифровка.Получатель;	
	//конец Дима
	
	
	////Дима 26.10.2017 16:45:15////УстановитьТекущуюСтроку
    Для Каждого Строка Из Объект.РаспределениеПоСчетам Цикл

        Если Строка.ДеньВДень Тогда
            Элементы.РаспределениеПоСчетам.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
            Прервать;
        КонецЕсли;

    КонецЦикла;	
	//конец Дима
КонецПроцедуры
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////




//////////////////////////////////////ОБРАБОТКИ ТАБЛИЧНОЙ ЧАСТИ РАСПРЕДЕЛЕНИЕ ПО СЧЕТАМ////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура РаспределениеПоСчетамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

    ОбновитьДанные();

    ОбновитьКонечныйОстаток();

    Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоСчетамПриАктивизацииСтроки(Элемент)

    Если Объект.РаспределениеПоСчетам.Количество() = 0 Тогда
        Возврат;
    КонецЕсли;

    ОбновитьДинамическийСписок();

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоСчетамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

    Если НоваяСтрока Тогда
        Элементы.РаспределениеПоСчетам.ТекущиеДанные.НомерВБухгалтерии = Неопределено;
        Элементы.РаспределениеПоСчетам.ТекущиеДанные.НомерПлатежа = Неопределено;
        Элементы.РаспределениеПоСчетам.ТекущиеДанные.Сумма = 0;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоСчетамПередНачаломИзменения(Элемент, Отказ)

    НомерВБухгалтерии = Элементы.РаспределениеПоСчетам.ТекущиеДанные.НомерВБухгалтерии;

    Если ЗначениеЗаполнено(НомерВБухгалтерии) Тогда
        Отказ = Истина;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоСчетамПередУдалением(Элемент, Отказ)

    НомерВБухгалтерии = Элементы.РаспределениеПоСчетам.ТекущиеДанные.НомерВБухгалтерии;

    Если ЗначениеЗаполнено(НомерВБухгалтерии) Тогда
        Отказ = Истина;
    Иначе
        Модифицированность = Истина;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоСчетамПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

    Если Элемент.ТекущиеДанные.СчетКонтрагента = Объект.Расшифровка.СчетОрганизации Тогда
        Отказ = Истина;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФормулаКонвертацииНажатие(Элемент)

    ТекущаяФормула = ВидыКонвертации.НайтиПоЗначению(Элементы.ФормулаКонвертации.Заголовок);

    Если ТекущаяФормула = Неопределено Тогда
        Возврат;
    КонецЕсли;

    Индекс = ВидыКонвертации.Индекс(ТекущаяФормула);

    Попытка
        Элементы.ФормулаКонвертации.Заголовок = ВидыКонвертации[Индекс + 1];
    Исключение
        Элементы.ФормулаКонвертации.Заголовок = ВидыКонвертации[0];
    КонецПопытки;
	
	
	
	//
    АвтоЦвет = Новый Цвет;

    Элементы.РаспределениеПоСчетамСумма.ЦветФонаЗаголовка = АвтоЦвет;
    Элементы.РаспределениеПоСчетамСконвертированнаяСумма.ЦветФонаЗаголовка = АвтоЦвет;
    Элементы.РаспределениеПоСчетамКурс.ЦветФонаЗаголовка = АвтоЦвет;

    МассивСлагаемых = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
        Элементы.ФормулаКонвертации.Заголовок, " =");

    Элементы["РаспределениеПоСчетам" + МассивСлагаемых[0]].ЦветФонаЗаголовка = WebЦвета.Охра;
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьДанные()

    Формула = Элементы.ФормулаКонвертации.Заголовок;

    МассивСлов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Формула, " ");

    Для Счётчик = 0 По МассивСлов.Количество() - 1 Цикл
        Если СтроковыеФункцииКлиентСервер.ТолькоКириллицаВСтроке(МассивСлов[Счётчик]) Тогда
            МассивСлов[Счётчик] = "Элементы.РаспределениеПоСчетам.ТекущиеДанные[" + Символ(34) + МассивСлов[Счётчик]
                + Символ(34) + "]";
        КонецЕсли;
    КонецЦикла;

    Формула = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивСлов, " ");

    Выполнить (Формула);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьКонечныйОстаток()
    ОстатокНаКонец = ОстатокНаКонецИсходный - Объект.РаспределениеПоСчетам.Итог("Сумма");
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьСтроки(Обработка)

    Объект = ДанныеФормыВЗначение(Обработка, Тип("ОбработкаОбъект.ЗаполнениеРегистраДДС"));
    Объект.РаспределениеПоСчетам.Свернуть(
        "Владелец,Организация,СчетКонтрагента,ДоговорыКонтрагентов,Валюта,Курс,ДеньВДень,НомерПлатежа,НомерВБухгалтерии ",
        "Сумма,ВалютнаяСумма");
    ЗначениеВДанныеФормы(Объект, Обработка);

КонецПроцедуры

&НаКлиенте
Процедура СвернутьСтроки(Команда)

    ОпределениеНомераПлатежа();

    Для Каждого строка Из Элементы.РаспределениеПоСчетам.ВыделенныеСтроки Цикл
        запись = Объект.РаспределениеПоСчетам.НайтиПоИдентификатору(строка);
        запись.НомерПлатежа = "0";
    КонецЦикла;

    Обработка = Объект;
    ОбновитьСтроки(Обработка);
    КопироватьДанныеФормы(Обработка, Объект);

КонецПроцедуры

&НаКлиенте
Процедура ОпределениеНомераПлатежа()

    Для Каждого строка Из Объект.РаспределениеПоСчетам Цикл
        Если ТипЗнч(строка.НомерПлатежа) <> Тип("ДокументСсылка.ТаможняРассчёты") Тогда
            строка.НомерПлатежа = строка(строка.НомерСтроки);
        КонецЕсли;
    КонецЦикла;

КонецПроцедуры	

////Дима 06.11.2015 14:58:36////Открыть запись регистра по навигационной ссылке
&НаКлиенте
Процедура РаспределениеПоСчетамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

    Попытка
        ПерейтиПоНавигационнойСсылке(Элементы.РаспределениеПоСчетам.ТекущиеДанные.СсылкаНаЗапись);
    Исключение
    КонецПопытки;

КонецПроцедуры
//конец Дима
&НаКлиенте
Процедура РаспределениеПоСчетамДеньВДеньПриИзменении(Элемент)
	
	//Если Элементы.РаспределениеПоСчетам.ТекущиеДанные.ДеньВДень Тогда
	//	Элементы.РаспределениеПоСчетам.ТекущиеДанные.ДатаПоступления = Дата(1, 1, 1);
	//КонецЕсли;	

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////





//////////////////////////////////////ИСТОРИЯ ДВИЖЕНИЙ ПО СЧЕТУ//////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////

////Дима 12.05.2015 10:15:33////Открыть историю оплат по выделенному счету
&НаКлиенте
Процедура ИсторияОтправки(Команда)

    Элементы.Группа2.Видимость = Не Элементы.Группа2.Видимость;

КонецПроцедуры
&НаКлиенте
Процедура ОбновитьДинамическийСписок()

    ИсторияОтправки.Параметры.УстановитьЗначениеПараметра("Контрагент",
        Элементы.РаспределениеПоСчетам.ТекущиеДанные.Владелец);
    ИсторияОтправки.Параметры.УстановитьЗначениеПараметра("СчетКонтрагента",
        Элементы.РаспределениеПоСчетам.ТекущиеДанные.СчетКонтрагента);

    Элементы.ИсторияОтправки.Обновить();

КонецПроцедуры
//конец Дима
#Область НастройкиФормы

////Дима 19.05.2015 17:13:26////Настроить размеры формы
&НаКлиенте
Процедура НастройкаРазмераФормы(Команда)
    ПараметрыФормы = Новый Структура("КлючРазмераФормы", "РазмерФормыЭталон");
    ОткрытьФорму("Обработка.ЗаполнениеРегистраДДС.Форма.Форма", ПараметрыФормы, ЭтаФорма, , , , ,
        РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
//конец Дима

#КонецОбласти


//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////






//////////////////////////////////////ОБРАБОТКА ВАЛЮТНЫХ РАССЧЁТОВ//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура РедактироватьВалютныйПлатеж(Команда)

    П = Новый Структура;
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьЗаполнениеПоСчетам", ЭтаФорма);

    Ссылка = Элементы.РаспределениеПоСчетам.ТекущиеДанные.НомерПлатежа;

    Если ЗначениеЗаполнено(Ссылка) Тогда
        П.Вставить("Ключ", Ссылка);

    Иначе
        ДанныеЗаполнения = Новый Структура;
        ДанныеЗаполнения.Вставить("Организация", Объект.Расшифровка.Организация);
        ДанныеЗаполнения.Вставить("Контрагент", Объект.Расшифровка.Получатель);
        ДанныеЗаполнения.Вставить("СчетОрганизации", Объект.Расшифровка.СчетОрганизации);
        ДанныеЗаполнения.Вставить("СчетКонтрагента", Элементы.РаспределениеПоСчетам.ТекущиеДанные.СчетКонтрагента);
        ДанныеЗаполнения.Вставить("ДоговорыКонтрагентов",
            Элементы.РаспределениеПоСчетам.ТекущиеДанные.ДоговорыКонтрагентов);

        П.Вставить("ЗначенияЗаполнения", ДанныеЗаполнения);

    КонецЕсли;

    ОткрытьФорму("Документ.ТаможняРассчёты.Форма.ФормаДокумента", П, ЭтаФорма, , , , ОписаниеОповещения,
        РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
&НаКлиенте
Процедура ОбновитьЗаполнениеПоСчетам(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

    ВладелецФормы.Перечитывать = Истина;
    ВладелецФормы.ПеречитатьОтчёт();

    ОбновитьЗаполнениеПоСчетамНаСервере();
    ОбновитьКонечныйОстаток();

КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаполнениеПоСчетамНаСервере()

    ОбработкаДДС = РеквизитФормыВЗначение("Объект");
    ОбработкаДДС.ЗаполнитьДанныеПоСчетам();
    ЗначениеВРеквизитФормы(ОбработкаДДС, "Объект");

КонецПроцедуры
&НаКлиенте
Функция КоличествоОткрытыхДокументовПП()

    ОткрытыеОкна = ПолучитьОкна();
    Счетчик = 0;

    Для Каждого окно Из ОткрытыеОкна Цикл
        Если Найти(окно.Заголовок, "Таможня рассчёты") <> 0 Тогда
            Счетчик = Счетчик + 1;
        КонецЕсли;
    КонецЦикла;

    Возврат Счетчик;

КонецФункции

&НаКлиенте
Процедура РедактироватьСумму(Команда)

    РазрешеноРедактировать = Не РазрешеноРедактировать;
    Элементы.РаспределениеПоСчетамСумма.Доступность = РазрешеноРедактировать;

    Если РазрешеноРедактировать Тогда
        Элементы.РаспределениеПоСчетамСуммаКонтекстноеМенюРедактироватьСумму.Заголовок = "Запретить редактировать сумму";
    Иначе
        Элементы.РаспределениеПоСчетамСуммаКонтекстноеМенюРедактироватьСумму.Заголовок = "Разрешить редактировать сумму";
    КонецЕсли;
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область КлиентскиеПеременныеФормы

&НаКлиенте
Перем ПараметрыДлительнойОперацииКлиент;

#КонецОбласти



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого ТипОрганизации Из Перечисления.ТипОрганизации Цикл
		НоваяЗапись = Объект.ПодключаемыеБазы.Добавить(); 
		НоваяЗапись.ТипОрганизации = ТипОрганизации; 
	КонецЦикла;	
	
	
КонецПроцедуры



&НаКлиенте
Процедура ПодключаемыеБазыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//Установим/Снимем выбор элемента
	Элемент.ТекущиеДанные.Отметка = Не Элемент.ТекущиеДанные.Отметка;
	
КонецПроцедуры




#Область ФоновоеОбновлениеСправочника



&НаКлиенте
Процедура Запустить(Команда)
	
	ОтключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания");
	
	РезультатВыполнения = ВыполнитьФоновоеЗаданиеНаСервере();
	
	Если РезультатВыполнения.ЗаданиеВыполнено Тогда    
		ПоказатьОповещениеПользователя("Фоновое задание выполнено");
	Иначе
		ПараметрыДлительнойОперацииКлиент = Новый Структура;
		ПараметрыДлительнойОперацииКлиент.Вставить("ПараметрыОбработчикаОжидания");
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(
		                                       ПараметрыДлительнойОперацииКлиент.ПараметрыОбработчикаОжидания);
		
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания",
		                                       ПараметрыДлительнойОперацииКлиент.ПараметрыОбработчикаОжидания.МинимальныйИнтервал, Истина);
		
		ПараметрыДлительнойОперацииКлиент.Вставить("ФормаДлительнойОперации",
		                                       ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(
		                                                                  ЭтаФорма, ИдентификаторЗадания));
	
	КонецЕсли;	
	
	
	
	
КонецПроцедуры



&НаСервере
Функция ВыполнитьФоновоеЗаданиеНаСервере()
	
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);    
	ИдентификаторЗадания = Неопределено;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПутьДлительнойПроцедуры", "Обработки.ЗагрузкаСправочникаОрганизаций.ОбновитьСправочникОрганизаций");
	
	ВыбранныеБазыТаблица = Объект.ПодключаемыеБазы.Выгрузить(Новый Структура("Отметка", Истина)); 
	СтруктураПараметров.Вставить("СписокБаз", ВыбранныеБазыТаблица.ВыгрузитьКолонку("ТипОрганизации"));
	
			
	РезультатВыполнения  = ДлительныеОперации.ЗапуститьВыполнениеВФоне(УникальныйИдентификатор, 
	"ФоновыеЗадачиСервер.УнверсальнаяОберткаФоновыхЗаданий", 
	СтруктураПараметров, 
	"ОбновлениеСправочникаОрганизаций");    
	
	ИдентификаторЗадания = РезультатВыполнения.ИдентификаторЗадания;
	АдресХранилища       = РезультатВыполнения.АдресХранилища;    
		
	
	
	Возврат РезультатВыполнения;	
	
	
	
	
КонецФункции



&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	
	
		Если ЗаданиеВыполнено(ИдентификаторЗадания, СообщенияФоновогоЗадания) Тогда 
			
			РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ПараметрыДлительнойОперацииКлиент.ФормаДлительнойОперации);
		Иначе
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыДлительнойОперацииКлиент.ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 
			                                          ПараметрыДлительнойОперацииКлиент.ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
		КонецЕсли;
		
		
		//
		Если ТипЗнч(СообщенияФоновогоЗадания) = Тип("ФиксированныйМассив") Тогда
			Для Каждого Сообщение Из СообщенияФоновогоЗадания Цикл
				Сообщение.ИдентификаторНазначения = УникальныйИдентификатор;
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
        //	
		
		
		
КонецПроцедуры



&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания, СообщенияФоновогоЗадания)    
	
	ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если ФоновоеЗадание <> Неопределено Тогда
		СообщенияФоновогоЗадания = ФоновоеЗадание.ПолучитьСообщенияПользователю(Истина);
	КонецЕсли;	
		
    Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);    
	 
КонецФункции



#КонецОбласти





////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры

&НаСервере
Процедура ОбновитьСостояние()
    Для каждого ВременнаяСтрока Из СвойствоВнешниеИсточникиДанных Цикл
        ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ВременнаяСтрока.Имя];
        Если ВнешнийИсточникДанных.ПолучитьСостояние() = СостояниеВнешнегоИсточникаДанных.Подключен Тогда
            ВременнаяСтрока.Подключен = Истина;
        Else
            ВременнаяСтрока.Подключен = Ложь;
        КонецЕсли;
    EndDo;
КонецПроцедуры

&НаСервере
Процедура УстановитьСоединение(ИмяВнешнегоИсточникаДанных, Установить, ОчиститьПарольПользователя)
    Попытка
        ВнешнийИсточникДанныхМетаданные = Метаданные.ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
        ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
        Если Установить Тогда
            ВнешнийИсточникДанных.УстановитьСоединение();
        Else
            ВнешнийИсточникДанных.РазорватьСоединение();
            Если ПравоДоступа("ИзменениеСтандартнойАутентификацииСеанса", ВнешнийИсточникДанныхМетаданные) Тогда
                    // Удалим из текущего сеанса имя и пароль.
                ПараметрыСоединенияСеанса = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияСеанса();
                ПараметрыСоединенияСеанса.АутентификацияСтандартная = Неопределено;
                ПараметрыСоединенияСеанса.ИмяПользователя = Неопределено;
                ПараметрыСоединенияСеанса.Пароль = Неопределено;
                ВнешнийИсточникДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединенияСеанса);
            КонецЕсли;
            Если ОчиститьПарольПользователя 
                И ПравоДоступа("ИзменениеСтандартнойАутентификации", ВнешнийИсточникДанныхМетаданные) Тогда
                    // Удалим для текущего пользователя пароль.
                ПараметрыСоединенияПользователя = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(
                    ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
                ПараметрыСоединенияПользователя.АутентификацияСтандартная = Неопределено;
                ПараметрыСоединенияПользователя.ИмяПользователя = Неопределено;
                ПараметрыСоединенияПользователя.Пароль = Неопределено;
                ВнешнийИсточникДанных.УстановитьПараметрыСоединенияПользователя(
                    ПользователиИнформационнойБазы.ТекущийПользователь().Имя, ПараметрыСоединенияПользователя);
            КонецЕсли;
        КонецЕсли;
        ОбновитьСостояние();
    Исключение
        ОбновитьСостояние();
        ВызватьИсключение;
    КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ПараметрыСоединенияВСтруктуру(ПараметрыСоединения)
    Результат = Новый Структура;
    Результат.Вставить("АутентификацияСтандартная", ПараметрыСоединения.АутентификацияСтандартная);
    Результат.Вставить("АутентификацияСтандартнаяВключена", 
        ПараметрыСоединения.АутентификацияСтандартная <> Неопределено);
    Результат.Вставить("ИмяПользователя", ПараметрыСоединения.ИмяПользователя);
    Результат.Вставить("ИмяПользователяВключено", ПараметрыСоединения.ИмяПользователя <> Неопределено);
    Результат.Вставить("ПарольУстановлен", ПараметрыСоединения.ПарольУстановлен);
    Результат.Вставить("СтрокаСоединения", ПараметрыСоединения.СтрокаСоединения);
    Результат.Вставить("СтрокаСоединенияВключена", ПараметрыСоединения.СтрокаСоединения <> Неопределено);
    Результат.Вставить("СУБД", ПараметрыСоединения.СУБД);
    Результат.Вставить("СУБДВключена", ПараметрыСоединения.СУБД <> Неопределено);
    Возврат Результат;
КонецФункции

&НаСервере
Функция СтруктураВПараметрыСоединения(Структура, ПараметрыСоединения)
    ПараметрыСоединения.АутентификацияСтандартная 
        = ?(Структура.АутентификацияСтандартнаяВключена, Структура.АутентификацияСтандартная, Неопределено);
    ПараметрыСоединения.ИмяПользователя = ?(Структура.ИмяПользователяВключено, Структура.ИмяПользователя, Неопределено);
    Если Структура.ПарольИзменен Тогда
        ПараметрыСоединения.Пароль = ?(Структура.ПарольУстановлен, Структура.Пароль, Неопределено);
    КонецЕсли;
    ПараметрыСоединения.СтрокаСоединения 
        = ?(Структура.СтрокаСоединенияВключена, Структура.СтрокаСоединения, Неопределено);
    ПараметрыСоединения.СУБД = ?(Структура.СУБДВключена, Структура.СУБД, Неопределено);
КонецФункции

&НаСервере
Функция ПолучитьОбщиеПараметрыСоединения(ИмяВнешнегоИсточникаДанных)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    Возврат ПараметрыСоединенияВСтруктуру(ВнешнийИсточникДанных.ПолучитьОбщиеПараметрыСоединения());
КонецФункции

&НаСервере
Функция УстановитьОбщиеПараметрыСоединения(ИмяВнешнегоИсточникаДанных, Структура)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    ПараметрыСоединения = ВнешнийИсточникДанных.ПолучитьОбщиеПараметрыСоединения();
    СтруктураВПараметрыСоединения(Структура, ПараметрыСоединения);
    ВнешнийИсточникДанных.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения);
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Перем ЕстьАдминистратор;
    ЕстьАдминистратор = Ложь;
    
    Для каждого ВнешнийИсточникДанныхМетаданные Из Метаданные.ВнешниеИсточникиДанных Цикл
        Если Не ПравоДоступа("Использование", ВнешнийИсточникДанныхМетаданные) Тогда
            Продолжить;
        КонецЕсли;
        ВременнаяСтрока = СвойствоВнешниеИсточникиДанных.Добавить();
        ВременнаяСтрока.Имя = ВнешнийИсточникДанныхМетаданные.Имя;
        ВременнаяСтрока.Синоним = ВнешнийИсточникДанныхМетаданные.Синоним;
        Если ВременнаяСтрока.Синоним = "" Тогда
            ВременнаяСтрока.Синоним = ВременнаяСтрока.Имя;
        КонецЕсли;
        ВременнаяСтрока.Администратор = ПравоДоступа("Администрирование", ВнешнийИсточникДанныхМетаданные);
        ВременнаяСтрока.МожноСохранять 
            = ПравоДоступа("ИзменениеСтандартнойАутентификации", ВнешнийИсточникДанныхМетаданные);
        
        Если ВременнаяСтрока.Администратор Тогда
            ЕстьАдминистратор = Истина;
        КонецЕсли;
    EndDo;
    
    Если Не ЕстьАдминистратор Тогда
        Элементы.АдминистрированиеГруппа.Видимость = Ложь;
    КонецЕсли;
    
    ОбновитьСостояние();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики команд формы
//

&НаКлиенте
Процедура ИзменитьПараметрыПользователей(Команда)
    Если Элементы.СвойствоВнешниеИсточникиДанных.ТекущаяСтрока <> Неопределено Тогда
        Если Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Администратор Тогда
            ОткрытьФорму("Обработка.УправлениеВнешимиИсточникамиДанных.Форма.ПараметрыСоединенияПользователей", 
                Новый Структура("ИмяИсточникаДанных", Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Имя));
        Else
            Предупреждение(НСтр("ru = 'Только администратор источника данных может настраивать параметры пользователей.'", "ru"));
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОбщиеПараметры(Команда)
    Если Элементы.СвойствоВнешниеИсточникиДанных.ТекущаяСтрока <> Неопределено Тогда
        Если Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Администратор Тогда
            Форма = ПолучитьФорму("Обработка.УправлениеВнешимиИсточникамиДанных.Форма.ПараметрыСоединения", 
                Новый Структура("Параметры,ПредставлениеИсточникаДанных", 
                ПолучитьОбщиеПараметрыСоединения(Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Имя), 
                Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Синоним));
            
            Если Форма.ОткрытьМодально() = КодВозвратаДиалога.ОК Тогда
                УстановитьОбщиеПараметрыСоединения(Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Имя, 
                    Форма.ПолучитьПараметрыСоединения());
            КонецЕсли;
        Else
            Предупреждение(НСтр("ru = 'Только администратор источника данных может настраивать общие параметры.'", "ru"));
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключиться(Команда)
    Если Элементы.СвойствоВнешниеИсточникиДанных.ТекущаяСтрока <> Неопределено Тогда
        Форма = ПолучитьФорму("Обработка.УправлениеВнешимиИсточникамиДанных.Форма.Подключение", 
            Новый Структура("Имя", Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Имя));
        Форма.ОткрытьМодально();
        ОбновитьСостояние();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отключиться(Команда)
    Если Элементы.СвойствоВнешниеИсточникиДанных.ТекущаяСтрока <> Неопределено Тогда
        Ответ = КодВозвратаДиалога.Нет;
        Если Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.МожноСохранять 
            Или Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Администратор Тогда
            Ответ = Вопрос(НСтр("ru = 'Очистить сохраненный пароль?'", "ru"), РежимДиалогаВопрос.ДаНетОтмена);
        КонецЕсли;
        Если Ответ = КодВозвратаДиалога.Да Или Ответ = КодВозвратаДиалога.Нет Тогда
            УстановитьСоединение(Элементы.СвойствоВнешниеИсточникиДанных.ТекущиеДанные.Имя, Ложь, 
                Ответ = КодВозвратаДиалога.Да);
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры
//

&НаСервере
Процедура Перегрузить()
    
    ВнешнийИсточникДанныхМетаданные = Метаданные.ВнешниеИсточникиДанных[Параметры.Имя];
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[Параметры.Имя];
    
    ЭтоАдминистратор = ПравоДоступа("Администрирование", ВнешнийИсточникДанныхМетаданные);
    
    Элементы.Сохранять.Видимость = ПравоДоступа("ИзменениеСтандартнойАутентификации", ВнешнийИсточникДанныхМетаданные);
    
    Пароль = "";
    ПарольИзменен = Ложь;
    Сохранять = Ложь;
    ИспользоватьОбщиеПараметры = Ложь;
    ИспользоватьВведенныеПараметры = Истина;
    ИмяПользователя = "";
    
    ОбщиеПараметрыДоступны = Ложь;
    
    Если Не ПравоДоступа("ИзменениеСтандартнойАутентификацииСеанса", ВнешнийИсточникДанныхМетаданные) Тогда
        ОбщиеПараметрыДоступны = Ложь;
        ИспользоватьОбщиеПараметры = Истина;
        ИспользоватьВведенныеПараметры = Ложь;
    ИначеЕсли Не ПравоДоступа("ИзменениеСтандартнойАутентификации", ВнешнийИсточникДанныхМетаданные) Тогда
        // Если нет прав на измение стандартной аутентификации, и она включена в параметрах пользователя
        // или общих параметрах.
        // В таком случае делем доступным возможность использовать общие параметры соединения.
        ПараметрыПользователя = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
        ОбщиеПараметры = ВнешнийИсточникДанных.ПолучитьОбщиеПараметрыСоединения();
        Если ПараметрыПользователя.АутентификацияСтандартная = Истина Или
            (ПараметрыПользователя.АутентификацияСтандартная = Неопределено И ОбщиеПараметры.АутентификацияСтандартная = Истина) Тогда
            ОбщиеПараметрыДоступны = Истина;
        КонецЕсли;
    Иначе
        // Если в общих параметрах включена стандартная аутентификация, то разрешим использовать общие параметры
        // соединения.
        ОбщиеПараметры = ВнешнийИсточникДанных.ПолучитьОбщиеПараметрыСоединения();
        Если ОбщиеПараметры.АутентификацияСтандартная = Истина Тогда
            ОбщиеПараметрыДоступны = Истина;
        КонецЕсли;
    КонецЕсли;
    
    Если ОбщиеПараметрыДоступны Тогда
        Элементы.ИспользоватьОбщиеПараметры.Видимость = Истина;
        Элементы.ИспользоватьВведенныеПараметры.Видимость = Истина;
        Элементы.ГруппаСтандартнойАутентификации.Отображение = ОтображениеОбычнойГруппы.РамкаГруппы;
    Иначе
        Элементы.ИспользоватьОбщиеПараметры.Видимость = Ложь;
        Элементы.ИспользоватьВведенныеПараметры.Видимость = Ложь;
        Элементы.ГруппаСтандартнойАутентификации.Отображение = ОтображениеОбычнойГруппы.Нет;
    КонецЕсли;
    
    Элементы.ИмяПользователя.Видимость = ПравоДоступа("ИзменениеСтандартнойАутентификацииСеанса", ВнешнийИсточникДанныхМетаданные);
    Элементы.Пароль.Видимость = ПравоДоступа("ИзменениеСтандартнойАутентификацииСеанса", ВнешнийИсточникДанныхМетаданные);
    
    ПредставлениеИсточникаДанных = ВнешнийИсточникДанныхМетаданные.Синоним;
    Если ПредставлениеИсточникаДанных = "" Тогда
        ПредставлениеИсточникаДанных = ВнешнийИсточникДанныхМетаданные.Имя;
    КонецЕсли;
    
    ПараметрыСоединенияСеанса = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияСеанса();
    Если ПараметрыСоединенияСеанса.ПарольУстановлен = Истина Тогда 
        ИмяПользователя = ПараметрыСоединенияСеанса.ИмяПользователя;
        Пароль = "     ";
        ПарольИзменен = Ложь;
        Сохранять = Ложь;
    Иначе
        ПараметрыПользователя = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(
            ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
        Если ПараметрыПользователя.ПарольУстановлен = Истина  Тогда
            Если ПравоДоступа("ИзменениеСтандартнойАутентификации", ВнешнийИсточникДанныхМетаданные) Тогда
                ИмяПользователя = ПараметрыПользователя.ИмяПользователя;
                Пароль = "     ";
                ПарольИзменен = Ложь;
                Сохранять = Истина;
            Иначе
                ПарольИзменен = Истина;
                Сохранять = Ложь;
            КонецЕсли;
        Иначе
            ПарольИзменен = Истина;
            Сохранять = Ложь;
        КонецЕсли;
    КонецЕсли;
        
КонецПроцедуры

&НаСервере
Функция ВыполнитьПодключение()
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[Параметры.Имя];
    ВнешнийИсточникДанных.УстановитьСоединение();
КонецФункции

&НаСервере
Функция ОтработкаОКНаСервере()
    
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[Параметры.Имя];
        
    Если ИспользоватьОбщиеПараметры Тогда
        // Нужно использовать общие параметры.
        
        ВнешнийИсточникДанныхМетаданные = Метаданные.ВнешниеИсточникиДанных[Параметры.Имя];

        // Очистим параметры соединения сеанса.
        
        // Если есть права изменять параметры соединения, то очистим их.
        Если ПравоДоступа("ИзменениеСтандартнойАутентификацииСеанса", ВнешнийИсточникДанныхМетаданные) Тогда
            ПараметрыСоединенияСеанса = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияСеанса();
            ПараметрыСоединенияСеанса.АутентификацияСтандартная = Неопределено;
            ПараметрыСоединенияСеанса.ИмяПользователя = Неопределено;
            ПараметрыСоединенияСеанса.Пароль = Неопределено;
            ВнешнийИсточникДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединенияСеанса);
        КонецЕсли;
        
        // Если есть права изменять параметры пользователя, то очистим их.
        Если ПравоДоступа("ИзменениеСтандартнойАутентификации", ВнешнийИсточникДанныхМетаданные) Тогда
            ПараметрыПользователя = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
            ПараметрыПользователя.АутентификацияСтандартная = Неопределено;
            ПараметрыПользователя.ИмяПользователя = Неопределено;
            ПараметрыПользователя.Пароль = Неопределено;
            ВнешнийИсточникДанных.УстановитьПараметрыСоединенияПользователя(ПользователиИнформационнойБазы.ТекущийПользователь().Имя, ПараметрыПользователя);
        КонецЕсли;
        
        ВыполнитьПодключение();
        
    Иначе
        Если Не Сохранять Тогда
            // Если не установлен признак Сохранять. 
            //   Устанавливаем имя пользователя и пароль в текущий сеанс.
            ПараметрыСоединенияСеанса = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияСеанса();
            ПараметрыСоединенияСеанса.АутентификацияСтандартная = Истина;
            ПараметрыСоединенияСеанса.ИмяПользователя = ИмяПользователя;
            Если ПарольИзменен Тогда
                ПараметрыСоединенияСеанса.Пароль = Пароль;
            КонецЕсли;
            ВнешнийИсточникДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединенияСеанса);
            //   Выполняем подключение.
            //   Если подключение выполнено успешно, выдаем сообщение, закрываем окно
            //   В противном случае выдаем ошибку, повторяем процесс.
            ВыполнитьПодключение();
        Иначе
            // Если установлен признак Сохранять. 
            Если ПарольИзменен Тогда
                //   Если был изменен пароль, то:
                //     Устанавливаем имя пользователя и пароль в текущем сеансе.
                ПараметрыСоединенияСеанса = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияСеанса();
                ПараметрыСоединенияСеанса.АутентификацияСтандартная = Истина;
                ПараметрыСоединенияСеанса.ИмяПользователя = ИмяПользователя;
                ПараметрыСоединенияСеанса.Пароль = Пароль;
                ВнешнийИсточникДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединенияСеанса);
                //     Выполянем подключение. 
                Попытка
                    ВыполнитьПодключение();
                    //     Если подключение выполнено успешно, то 
                    //        Сбрасываем имя пользователя и пароль в текущем сеансе. 
                    ПараметрыСоединенияСеанса.АутентификацияСтандартная = Неопределено;
                    ПараметрыСоединенияСеанса.ИмяПользователя = Неопределено;
                    ПараметрыСоединенияСеанса.Пароль = Неопределено;
                    ВнешнийИсточникДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединенияСеанса);
                    //        Устанавливаем введенные имя и пароль текущему пользователю.
                    ПараметрыПользователя = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
                    ПараметрыПользователя.АутентификацияСтандартная = Истина;
                    ПараметрыПользователя.ИмяПользователя = ИмяПользователя;
                    ПараметрыПользователя.Пароль = Пароль;
                    ВнешнийИсточникДанных.УстановитьПараметрыСоединенияПользователя(ПользователиИнформационнойБазы.ТекущийПользователь().Имя, ПараметрыПользователя);
                    //        выдаем сообщение, закрываем окно.
                Исключение
                    //     Если подлкючение выплонено не успешно
                    //        Сбрасываем параметры соединения сеанса выдаем ошибку, повторяем процесс.
                    ПараметрыСоединенияСеанса.АутентификацияСтандартная = Неопределено;
                    ПараметрыСоединенияСеанса.ИмяПользователя = Неопределено;
                    ПараметрыСоединенияСеанса.Пароль = Неопределено;
                    ВнешнийИсточникДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединенияСеанса);
                    ВызватьИсключение;
                КонецПопытки;
            Иначе
                //   Если пароль изменен не был, то:
                //      Сбрасываем имя и пароль в текущем сеансе
                ПараметрыСоединенияСеанса = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияСеанса();
                ПараметрыСоединенияСеанса.АутентификацияСтандартная = Неопределено;
                ПараметрыСоединенияСеанса.ИмяПользователя = Неопределено;
                ПараметрыСоединенияСеанса.Пароль = Неопределено;
                ВнешнийИсточникДанных.УстановитьПараметрыСоединенияСеанса(ПараметрыСоединенияСеанса);
                
                //      Выполняем подключение
                //      Если успешно, то сообщаем пользоваетлю, закрываем окно.
                //      Если не успешно, то выдаем ошибку, продолжаем.
                ВыполнитьПодключение();
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;

КонецФункции

&НаСервере
Функция УстановитьОбщиеПараметрыСоединения(ИмяВнешнегоИсточникаДанных, Структура)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    ПараметрыСоединения = ВнешнийИсточникДанных.ПолучитьОбщиеПараметрыСоединения();
    СтруктураВПараметрыСоединения(Структура, ПараметрыСоединения);
    ВнешнийИсточникДанных.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения);
КонецФункции

&НаСервере
Функция СтруктураВПараметрыСоединения(Структура, ПараметрыСоединения)
    ПараметрыСоединения.АутентификацияСтандартная = ?(Структура.АутентификацияСтандартнаяВключена, Структура.АутентификацияСтандартная, Неопределено);
    ПараметрыСоединения.ИмяПользователя = ?(Структура.ИмяПользователяВключено, Структура.ИмяПользователя, Неопределено);
    Если Структура.ПарольИзменен Тогда
        ПараметрыСоединения.Пароль = ?(Структура.ПарольУстановлен, Структура.Пароль, Неопределено);
    КонецЕсли;
    ПараметрыСоединения.СтрокаСоединения = ?(Структура.СтрокаСоединенияВключена, Структура.СтрокаСоединения, Неопределено);
    ПараметрыСоединения.СУБД = ?(Структура.СУБДВключена, Структура.СУБД, Неопределено);
КонецФункции

&НаСервере
Функция ПолучитьОбщиеПараметрыСоединения(ИмяВнешнегоИсточникаДанных)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    Возврат ПараметрыСоединенияВСтруктуру(ВнешнийИсточникДанных.ПолучитьОбщиеПараметрыСоединения());
КонецФункции

&НаСервере
Функция ПараметрыСоединенияВСтруктуру(ПараметрыСоединения)
    Результат = Новый Структура;
    Результат.Вставить("АутентификацияСтандартная", ПараметрыСоединения.АутентификацияСтандартная);
    Результат.Вставить("АутентификацияСтандартнаяВключена", ПараметрыСоединения.АутентификацияСтандартная <> Неопределено);
    Результат.Вставить("ИмяПользователя", ПараметрыСоединения.ИмяПользователя);
    Результат.Вставить("ИмяПользователяВключено", ПараметрыСоединения.ИмяПользователя <> Неопределено);
    Результат.Вставить("ПарольУстановлен", ПараметрыСоединения.ПарольУстановлен);
    Результат.Вставить("СтрокаСоединения", ПараметрыСоединения.СтрокаСоединения);
    Результат.Вставить("СтрокаСоединенияВключена", ПараметрыСоединения.СтрокаСоединения <> Неопределено);
    Результат.Вставить("СУБД", ПараметрыСоединения.СУБД);
    Результат.Вставить("СУБДВключена", ПараметрыСоединения.СУБД <> Неопределено);
    Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьПараметрыСоединения(ИмяВнешнегоИсточникаДанных, ИмяПользователя)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    Возврат ПараметрыСоединенияВСтруктуру(ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(ИмяПользователя));
КонецФункции

&НаСервере
Функция УстановитьПараметрыСоединения(ИмяВнешнегоИсточникаДанных, ИмяПользователя, Структура)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    ПараметрыСоединения = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(ИмяПользователя);
    СтруктураВПараметрыСоединения(Структура, ПараметрыСоединения);
    ВнешнийИсточникДанных.УстановитьПараметрыСоединенияПользователя(ИмяПользователя, ПараметрыСоединения);
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаКлиенте
Процедура ИспользоватьВведенныеПараметрыПриИзменении(Элемент)
    ИспользоватьОбщиеПараметры = Не ИспользоватьВведенныеПараметры;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбщиеПараметрыПриИзменении(Элемент)
    ИспользоватьВведенныеПараметры = Не ИспользоватьОбщиеПараметры;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Перегрузить();
    
    ВнешнийИсточникДанныхМетаданные = Метаданные.ВнешниеИсточникиДанных[Параметры.Имя];
    
    Если (Не ПравоДоступа("Администрирование", ВнешнийИсточникДанныхМетаданные)) Тогда
        Элементы.ОбщиеПараметры.Видимость = Ложь;
        Элементы.ПараметрыПользователя.Видимость = Ложь;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура СохранятьПриИзменении(Элемент)
    Если Не ПарольИзменен Тогда
        ПарольИзменен = Истина;
        Пароль = "";
    КонецЕсли;
    ИспользоватьВведенныеПараметры = Истина;
    ИспользоватьОбщиеПараметры = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ИмяПользователяПриИзменении(Элемент)
    Если Не ПарольИзменен Тогда
        ПарольИзменен = Истина;
        Пароль = "";
    КонецЕсли;
    ИспользоватьВведенныеПараметры = Истина;
    ИспользоватьОбщиеПараметры = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
    ПарольИзменен = Истина;
    ИспользоватьВведенныеПараметры = Истина;
    ИспользоватьОбщиеПараметры = Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики команд формы
//

&НаКлиенте
Процедура ИзменитьОбщиеПараметры(Команда)
    Если ЭтоАдминистратор Тогда
        Форма = ПолучитьФорму("Обработка.УправлениеВнешимиИсточникамиДанных.Форма.ПараметрыСоединения", Новый Структура("Параметры,ПредставлениеИсточникаДанных", ПолучитьОбщиеПараметрыСоединения(Параметры.Имя), ПредставлениеИсточникаДанных));
        
        Если Форма.ОткрытьМодально() = КодВозвратаДиалога.ОК Тогда
            УстановитьОбщиеПараметрыСоединения(Параметры.Имя, Форма.ПолучитьПараметрыСоединения());
        КонецЕсли;
    Иначе
        Предупреждение(НСтр("ru = 'Только администратор источника данных может настраивать общие параметры.'", "ru"));
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПараметрыПользователя(Команда)
    Форма = ПолучитьФорму("Обработка.УправлениеВнешимиИсточникамиДанных.Форма.ПараметрыСоединения", Новый Структура("Параметры,ПредставлениеИсточникаДанных,ПользовательИБ", ПолучитьПараметрыСоединения(Параметры.Имя, ИмяПользователя()), ПредставлениеИсточникаДанных, ИмяПользователя()));
    
    Если Форма.ОткрытьМодально() = КодВозвратаДиалога.ОК Тогда
        УстановитьПараметрыСоединения(Параметры.Имя, ИмяПользователя(), Форма.ПолучитьПараметрыСоединения());
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
    Попытка
        ОтработкаОКНаСервере();
        Закрыть(1);
    Исключение
        ОшИнф = ИнформацияОбОшибке();
        Пока ОшИнф.Причина <> Неопределено Цикл
            ОшИнф = ОшИнф.Причина;
        КонецЦикла;
        
        Предупреждение(ОшИнф.Описание, , НСтр("ru = 'Ошибка подключения'", "ru"));
    КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Ложь);
КонецПроцедуры


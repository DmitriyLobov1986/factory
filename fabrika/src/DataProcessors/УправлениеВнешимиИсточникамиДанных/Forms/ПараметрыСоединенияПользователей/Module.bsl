////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры
//

&НаСервере
Функция ПараметрыСоединенияВСтруктуру(ПараметрыСоединения)
    Результат = Новый Структура;
    Результат.Вставить("АутентификацияСтандартная", ПараметрыСоединения.АутентификацияСтандартная);
    Результат.Вставить("АутентификацияСтандартнаяВключена", ПараметрыСоединения.АутентификацияСтандартная <> Неопределено);
    Результат.Вставить("ИмяПользователя", ПараметрыСоединения.ИмяПользователя);
    Результат.Вставить("ИмяПользователяВключено", ПараметрыСоединения.ИмяПользователя <> Неопределено);
    Результат.Вставить("ПарольУстановлен", ПараметрыСоединения.ПарольУстановлен);
    Результат.Вставить("СтрокаСоединения", ПараметрыСоединения.СтрокаСоединения);
    Результат.Вставить("СтрокаСоединенияВключена", ПараметрыСоединения.СтрокаСоединения <> Неопределено);
    Результат.Вставить("СУБД", ПараметрыСоединения.СУБД);
    Результат.Вставить("СУБДВключена", ПараметрыСоединения.СУБД <> Неопределено);
    Возврат Результат;
КонецФункции

&НаСервере
Функция СтруктураВПараметрыСоединения(Структура, ПараметрыСоединения)
    ПараметрыСоединения.АутентификацияСтандартная = ?(Структура.АутентификацияСтандартнаяВключена, Структура.АутентификацияСтандартная, Неопределено);
    ПараметрыСоединения.ИмяПользователя = ?(Структура.ИмяПользователяВключено, Структура.ИмяПользователя, Неопределено);
    Если Структура.ПарольИзменен Тогда
        ПараметрыСоединения.Пароль = ?(Структура.ПарольУстановлен, Структура.Пароль, Неопределено);
    КонецЕсли;
    ПараметрыСоединения.СтрокаСоединения = ?(Структура.СтрокаСоединенияВключена, Структура.СтрокаСоединения, Неопределено);
    ПараметрыСоединения.СУБД = ?(Структура.СУБДВключена, Структура.СУБД, Неопределено);
КонецФункции

&НаСервере
Функция ПолучитьПараметрыСоединения(ИмяВнешнегоИсточникаДанных, ИмяПользователя)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    Возврат ПараметрыСоединенияВСтруктуру(ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(ИмяПользователя));
КонецФункции

&НаСервере
Функция УстановитьПараметрыСоединения(ИмяВнешнегоИсточникаДанных, ИмяПользователя, Структура)
    ВнешнийИсточникДанных = ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных];
    ПараметрыСоединения = ВнешнийИсточникДанных.ПолучитьПараметрыСоединенияПользователя(ИмяПользователя);
    СтруктураВПараметрыСоединения(Структура, ПараметрыСоединения);
    ВнешнийИсточникДанных.УстановитьПараметрыСоединенияПользователя(ИмяПользователя, ПараметрыСоединения);
КонецФункции

&НаКлиенте
Процедура ПараметрыСоединения()
    Если Элементы.Пользователи.ТекущаяСтрока <> Неопределено Тогда
        Форма = ПолучитьФорму("Обработка.УправлениеВнешимиИсточникамиДанных.Форма.ПараметрыСоединения", 
            Новый Структура("Параметры,ПредставлениеИсточникаДанных,ПользовательИБ", 
            ПолучитьПараметрыСоединения(Параметры.ИмяИсточникаДанных, Элементы.Пользователи.ТекущиеДанные.Значение), 
            СинонимИсточникаДанных, Элементы.Пользователи.ТекущиеДанные.Значение));
        
        Если Форма.ОткрытьМодально() = КодВозвратаДиалога.ОК Тогда
            УстановитьПараметрыСоединения(Параметры.ИмяИсточникаДанных, Элементы.Пользователи.ТекущиеДанные.Значение, Форма.ПолучитьПараметрыСоединения());
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    ВнешнийИсточникДанныхМетаданные = Метаданные.ВнешниеИсточникиДанных[Параметры.ИмяИсточникаДанных];
    СинонимИсточникаДанных = ВнешнийИсточникДанныхМетаданные.Синоним;
    ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
    Для каждого Пользователь Из ПользователиИБ Цикл
        Пользователи.Добавить(Пользователь.Имя);
    КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПользователиПередНачаломИзменения(Элемент, Отказ)
    Отказ = Истина;
    ПараметрыСоединения();
КонецПроцедуры

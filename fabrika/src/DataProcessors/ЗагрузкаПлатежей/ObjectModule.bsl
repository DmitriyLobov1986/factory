//////////////////////////////////////ПОДСИСТЕМА ТАМОЖНЯ//////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

////Дима 11.07.2014 9:55:55////Загрузка данных из внешних ИБ
Процедура ЗагрузкаПополненияКарт(АдресСтруктурыПодключений, ПериодЗагрузки) Экспорт
	
	СтруктураПодключений = ПолучитьИзВременногоХранилища(АдресСтруктурыПодключений);
	
	ДанныеПодключения = Неопределено;
	СтруктураПодключений.Свойство(ТипОрганизации, ДанныеПодключения);
	
	Запрос=ДанныеПодключения.Подключение.NewObject("Запрос");
	
	Запрос.Текст = "ВЫБРАТЬ
	|ПлатежноеПоручение.Номер КАК Номер,
	|ПлатежноеПоручение.Дата КАК Дата,
	|ПлатежноеПоручение.СуммаДокумента КАК Сумма,
	|ПлатежноеПоручение.Организация.ИНН Как Инн,
	|ПлатежноеПоручение.НазначениеПлатежа Как Назначение
	| ИЗ
	|Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	| ГДЕ
	|ПлатежноеПоручение.ПометкаУдаления = ЛОЖЬ
	|И ПлатежноеПоручение.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|И ПлатежноеПоручение.ВидОперации.Порядок = 5
	|И (ПлатежноеПоручение.СчетОрганизации.Банк.Код = ""044525593""
	|   И ПлатежноеПоручение.СчетКонтрагента.Банк.Код = ""044525593"" 
	|   ИЛИ ПлатежноеПоручение.СчетОрганизации.Банк.Код = ""044585659""
	|       И ПлатежноеПоручение.СчетКонтрагента.Банк.Код = ""044585659"")";
	
	
	Запрос.УстановитьПараметр("НачалоПериода",ПериодЗагрузки.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",ПериодЗагрузки.ДатаОкончания);

	Выборка = Запрос.Выполнить().Выбрать();
	ПополнениеКарт.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		строка = ПополнениеКарт.Добавить();
		строка.Дата = Выборка.Дата;
		строка.НомерВБухгалтерии = Выборка.Номер;
		строка.Сумма = Выборка.Сумма;
		строка.НазначениеПлатежа = Выборка.Назначение;
		строка.Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН", Выборка.Инн);  
		
	КонецЦикла;
	
	
КонецПроцедуры

////Дима 11.07.2014 13:34:54////Создать документы оплат в базе
Процедура СоздатьДокументыПополнения(ПериодЗагрузки, ИмяДокумента) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|  ЗагружаемыеДанные.*
		|ПОМЕСТИТЬ ЗагружаемыеДанные
		|ИЗ
		|	&ПополнениеКарт КАК ЗагружаемыеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПополнениеКарт.Дата,
		|	ПополнениеКарт.НомерВБухгалтерии,
		|	ПополнениеКарт.Организация,
		|	ПополнениеКарт.Сумма,
		|	ПополнениеКарт.Ссылка
		|ПОМЕСТИТЬ ЗагруженныеДанные
		|ИЗ
		|	Документ."+ИмяДокумента+" КАК ПополнениеКарт
		|ГДЕ
		|	ПополнениеКарт.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПополнениеКарт.ПометкаУдаления = ЛОЖЬ
		|	И ПополнениеКарт.РучнаяКорректировка = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗагружаемыеДанные.*,
		|	ЗагруженныеДанные.Ссылка
		|ПОМЕСТИТЬ СравнениеТаблиц
		|ИЗ
		|	ЗагружаемыеДанные КАК ЗагружаемыеДанные
		|		ПОЛНОЕ СОЕДИНЕНИЕ ЗагруженныеДанные КАК ЗагруженныеДанные
		|		ПО  ЗагружаемыеДанные.НомерВБухгалтерии = ЗагруженныеДанные.НомерВБухгалтерии
		|			И ЗагружаемыеДанные.Организация = ЗагруженныеДанные.Организация
		|			И ЗагружаемыеДанные.Сумма = ЗагруженныеДанные.Сумма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СравнениеТаблиц.Ссылка КАК Ссылка
		|ИЗ
		|	СравнениеТаблиц КАК СравнениеТаблиц
		|ГДЕ
		|	СравнениеТаблиц.Организация ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СравнениеТаблиц.*
		|ИЗ
		|	СравнениеТаблиц КАК СравнениеТаблиц
		|ГДЕ
		|	СравнениеТаблиц.Ссылка ЕСТЬ NULL ";

		
	Запрос.УстановитьПараметр("КонецПериода", ПериодЗагрузки.ДатаОкончания);
	Запрос.УстановитьПараметр("НачалоПериода", ПериодЗагрузки.ДатаНачала);
    Запрос.УстановитьПараметр("ПополнениеКарт", ЭтотОбъект[ИмяДокумента]);
	
	Результат = Запрос.ВыполнитьПакет();
	ТЗ_удалить = Результат[3].Выгрузить(); 
	ТЗ_создать = Результат[4].Выгрузить();

	
	//Удалим лишние документы за период
	Для каждого док Из ТЗ_удалить Цикл
		Документ = док.Ссылка.ПолучитьОбъект();
		Документ.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
	
    //Создадим недостающие документы
	Для Каждого строка Из ТЗ_создать Цикл
		
		Если Не ЗначениеЗаполнено(строка.Организация) Или Не ЗначениеЗаполнено(строка.НомерВБухгалтерии) Тогда
			продолжить;
		Иначе
			Документ = Документы[ИмяДокумента].СоздатьДокумент();
			Документ.Дата = строка.Дата;
			Документ.НомерВБухгалтерии = строка.НомерВБухгалтерии;
			Документ.Сумма = строка.Сумма;
			Документ.Организация = строка.Организация;
			Документ.НазначениеПлатежа = Лев(строка.НазначениеПлатежа,Найти(строка.НазначениеПлатежа,Символы.ПС)-1);
			
			//Заполним контрагента, если есть
			Попытка
				Документ.Контрагент = строка.Контрагент;
			Исключение
				
			КонецПопытки;
			
			
			Документ.Записать(РежимЗаписиДокумента.Проведение);
			
			//Выделим в табличной части созданные документы
			ЭтотОбъект[ИмяДокумента][строка.НомерСтроки-1].ДокументСоздан = Истина;
			ОбщийМодульСервер.ДобавитьСоообщениеВмассив(Документ, Документ.Номер);
		
		КонецЕсли;
		
	КонецЦикла;	
	
	//Оставим в ТЧ только созданные документы
	//СозданныеДокументы = ЭтотОбъект[ИмяДокумента].Выгрузить(Новый Структура("ДокументСоздан", Истина));
	//ЭтотОбъект[ИмяДокумента].Загрузить(СозданныеДокументы);
	
КонецПроцедуры

////Дима 31.07.2014 17:05:51////Загрузка данных с Sql сервера
Процедура ЗагрузкаРассчётовПоТаможне(ПериодЗагрузки) Экспорт 

	
	//Выберем данные из внешнего источника в таблицу значений
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗатратыБухгалтерские.Организация.Инн КАК ОргИнн,
		|	ЗатратыБухгалтерские.КонтрагентИНН.Инн КАК КонтрИнн,
		|	ЗатратыБухгалтерские.IDдокумента.НомерДокумента КАК НомерДокумента,
		|	ЗатратыБухгалтерские.IDдокумента.НазначениеПлатежа КАК НазначениеПлатежа,
		|	ЗатратыБухгалтерские.Сумма,
		|	ЗатратыБухгалтерские.Дата.Дата КАК Дата
		|ИЗ
		|	ВнешнийИсточникДанных.SqlЗатраты.Таблица.ЗатратыБухгалтерские КАК ЗатратыБухгалтерские
		|ГДЕ
		|	ЗатратыБухгалтерские.Дата.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЗатратыБухгалтерские.Сумма > 0";

	Запрос.УстановитьПараметр("КонецПериода", ПериодЗагрузки.ДатаОкончания);
	Запрос.УстановитьПараметр("НачалоПериода", ПериодЗагрузки.ДатаНачала);

	ТЗ = Запрос.Выполнить().Выгрузить();
	
	//Отберём нужные нам движения и загрузим их в табличную часть
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.ОргИнн,
		|	ТЗ.КонтрИнн,
		|	ТЗ.НомерДокумента,
		|	ТЗ.НазначениеПлатежа,
		|	ТЗ.Дата,
		|	ТЗ.Сумма
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.ОргИнн,
		|	ВТ.КонтрИнн,
		|	ВТ.НомерДокумента,
		|	ВТ.НазначениеПлатежа,
		|	ВТ.Дата,
		|	ВТ.Сумма
		|ПОМЕСТИТЬ ВТ_ВключаяВозвраты
		|ИЗ
		|	ВТ КАК ВТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ.КонтрИнн,
		|	ВТ.ОргИнн,
		|	ВТ.НомерДокумента,
		|	ВТ.НазначениеПлатежа,
		|	ВТ.Дата,
		|	ВТ.Сумма * -1
		|ИЗ
		|	ВТ КАК ВТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВключаяВозвраты.НомерДокумента КАК НомерВБухгалтерии,
		|	ВТ_ВключаяВозвраты.НазначениеПлатежа,
		|	ВТ_ВключаяВозвраты.Дата,
		|	ВТ_ВключаяВозвраты.Сумма,
		|	ТаможняВзаимозадолженностиОбороты.Организация,
		|	ТаможняВзаимозадолженностиОбороты.Контрагент
		|ИЗ
		|	РегистрНакопления.ТаможняВзаимозадолженности.Обороты КАК ТаможняВзаимозадолженностиОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВключаяВозвраты КАК ВТ_ВключаяВозвраты
		|		ПО ТаможняВзаимозадолженностиОбороты.Организация.ИНН = ВТ_ВключаяВозвраты.КонтрИнн
		|			И ТаможняВзаимозадолженностиОбороты.Контрагент.ИНН = ВТ_ВключаяВозвраты.ОргИнн";

		
	Запрос.УстановитьПараметр("ТЗ", ТЗ);	
		
	Результат = Запрос.Выполнить().Выгрузить();

	ТаможняРассчёты.Загрузить(Результат);	
	

	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////ПОДСИСТЕМА ДЕНЕЖНЫЕ СРЕДСТВА//////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

Функция ПолучитьТаблицуЗагрузки()

    ТЗ = Новый ТаблицаЗначений;
	
	ТЗ.Колонки.Добавить("ТипОрганизации",  Новый ОписаниеТипов("ПеречислениеСсылка.ТипОрганизации"));
	
	ТЗ.Колонки.Добавить("ОргИНН", Новый ОписаниеТипов("Строка", ,
								  Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
	ТЗ.Колонки.Добавить("НомерСчета", Новый ОписаниеТипов("Строка", ,
									  Новый КвалификаторыСтроки(20, ДопустимаяДлина.Переменная)));							  
	ТЗ.Колонки.Добавить("БИК", Новый ОписаниеТипов("Строка", ,
							   Новый КвалификаторыСтроки(9, ДопустимаяДлина.Переменная)));								  
	ТЗ.Колонки.Добавить("КонтрИНН", Новый ОписаниеТипов("Строка", ,
									Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
	ТЗ.Колонки.Добавить("День", Новый ОписаниеТипов("Дата", , ,
								Новый КвалификаторыДаты(ЧастиДаты.Дата)));								
    ТЗ.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",
								 Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
    ТЗ.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("Число",
								 Новый КвалификаторыЧисла(15, 0, ДопустимыйЗнак.Любой)));
	ТЗ.Колонки.Добавить("ОргНаименование", Новый ОписаниеТипов("Строка", ,
									Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
	ТЗ.Колонки.Добавить("СчетНаименование", Новый ОписаниеТипов("Строка", ,
									Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
  								 
	возврат ТЗ;							 
		
КонецФункции


////Дима 01.12.2014 14:24:55////Загрузка платежей из бухгалтерии для ДДС
Процедура ЗагрузкаПлатежейИзБухгалтерии(АдресСтруктурыПодключений, ПериодЗагрузки, СписокБаз) Экспорт
	Перем соединение;
	
	СтруктураПодключений = ПолучитьИзВременногоХранилища(АдресСтруктурыПодключений);
	
	ТЗcom = ПолучитьТаблицуЗагрузки();
		
	Для Каждого база из СписокБаз Цикл

		Если НЕ база.Пометка Тогда
			продолжить;
		ИначеЕсли НЕ СтруктураПодключений.Свойство(база, соединение) Тогда
			продолжить;
		КонецЕсли;	
		
		
		Запрос = соединение.Подключение.NewObject("Запрос");
		
		////Дима 18.03.2015 10:43:50////В случае работы с базой УПП меняем название документа на "Платежное поручение исходящее".
		Корректировка = ?(база.значение = Перечисления.ТипОрганизации.Упп, "Исходящее", Неопределено);
		//конец Дима
		
		Запрос.Текст = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПлатежноеПоручение.Организация.ИНН КАК ОргИНН,
			|	ПлатежноеПоручение.СчетОрганизации.НомерСчета КАК НомерСчета,
			|	ПлатежноеПоручение.СчетОрганизации.Банк.Код КАК БИК,
			|	ПлатежноеПоручение.Контрагент.ИНН КАК КонтрИНН,
			|	СУММА(ПлатежноеПоручение.СуммаДокумента) КАК Сумма,
			|	НАЧАЛОПЕРИОДА(ПлатежноеПоручение.Дата, ДЕНЬ) КАК День,
			|	ПлатежноеПоручение.ВидОперации.Порядок КАК ВидОперации,
			|	МАКСИМУМ(ПлатежноеПоручение.СчетОрганизации.Наименование) КАК СчетНаименование
			|ИЗ
			|	Документ.ПлатежноеПоручение" + Корректировка + " КАК ПлатежноеПоручение
			|ГДЕ
			|	ПлатежноеПоручение.ПометкаУдаления = ЛОЖЬ
			|	И ПлатежноеПоручение.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	ПлатежноеПоручение.Организация.ИНН,
			|	ПлатежноеПоручение.СчетОрганизации.НомерСчета,
			|	ПлатежноеПоручение.СчетОрганизации.Банк.Код,
			|	ПлатежноеПоручение.Контрагент.ИНН,
			|	НАЧАЛОПЕРИОДА(ПлатежноеПоручение.Дата, ДЕНЬ),
			|	ПлатежноеПоручение.ВидОперации.Порядок";

		
		Запрос.УстановитьПараметр("КонецПериода",	ПериодЗагрузки.ДатаОкончания);
		Запрос.УстановитьПараметр("НачалоПериода",	ПериодЗагрузки.ДатаНачала);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			запись = ТЗcom.Добавить();
			запись.ТипОрганизации = соединение.ТипОрганизации;
			ЗаполнитьЗначенияСвойств(запись, Выборка);
		КонецЦикла;	
		
	КонецЦикла;
	
	//Очистим организации в ТЗcom
	ТЗcom.Колонки.ОргИнн.Имя = "Инн";
	ОбщийМодульСервер.ПроверкаОрганизацийНаСоотвествие(ТЗcom);
	ТЗcom.Колонки.Инн.Имя = "ОргИнн";
	ТЗcom.Колонки.Ссылка.Имя = "Организация";
	
	
	//Поместим полученную ТЗ во временную таблицу
	ЗапросВТ = Новый Запрос;
	ЗапросВТ.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ВТ_Бухгалтерия ИЗ &ТЗ Как ТЗ";
	ЗапросВТ.УстановитьПараметр("ТЗ", ТЗcom);
	ЗапросВТ.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗапросВТ.Выполнить();
	
	//Отберём данные и загрузим в табличную часть
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка КАК Организация,
		|	НастройкаПолейОтправки.ТипДвижения,
		|	НастройкаПолейОтправки.Получатель
		|ПОМЕСТИТЬ ВР_Инфо
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПолейОтправки КАК НастройкаПолейОтправки
		|		ПО Организации.Ссылка = НастройкаПолейОтправки.Организация
		|ГДЕ
		|	НастройкаПолейОтправки.ТипДвижения = ЗНАЧЕНИЕ(Перечисление.ТипДвиженияДДС.Списание)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА БанковскиеСчета.Ссылка ЕСТЬ NULL 
		|			ТОГДА ВТ_Бухгалтерия.СчетНаименование
		|		ИНАЧЕ БанковскиеСчета.Ссылка
		|	КОНЕЦ КАК СчетОрганизации,
		|	ВЫБОР
		|		КОГДА ВТ_Бухгалтерия.ВидОперации = 5
		|			ТОГДА ""Перевод""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВР_Инфо.Получатель ЕСТЬ NULL 
		|					ТОГДА ""Прочие""
		|				ИНАЧЕ ВР_Инфо.Получатель
		|			КОНЕЦ
		|	КОНЕЦ КАК Контрагент,
		|	ВТ_Бухгалтерия.День КАК Дата,
		|	СУММА(ВТ_Бухгалтерия.Сумма) КАК Сумма,
		|	ЗНАЧЕНИЕ(Перечисление.ТипДвиженияДДС.Списание) КАК ТипДвижения,
		|	ВТ_Бухгалтерия.Организация,
		|	ВЫБОР
		|		КОГДА БанковскиеСчета.Ссылка ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтсутствуютДанные
		|ИЗ
		|	ВТ_Бухгалтерия КАК ВТ_Бухгалтерия
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_Инфо КАК ВР_Инфо
		|		ПО ВТ_Бухгалтерия.КонтрИНН = ВР_Инфо.Получатель.ИНН
		|			И ВТ_Бухгалтерия.Организация = ВР_Инфо.Организация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
		|		ПО ВТ_Бухгалтерия.НомерСчета = БанковскиеСчета.НомерСчета
		|			И ВТ_Бухгалтерия.БИК = БанковскиеСчета.БИК
		|			И ВТ_Бухгалтерия.Организация = БанковскиеСчета.Владелец
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВТ_Бухгалтерия.ВидОперации = 5
		|				ТОГДА ""Перевод""
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВР_Инфо.Получатель ЕСТЬ NULL 
		|						ТОГДА ""Прочие""
		|					ИНАЧЕ ВР_Инфо.Получатель
		|				КОНЕЦ
		|		КОНЕЦ = ""Прочие""
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Бухгалтерия.День,
		|	ВТ_Бухгалтерия.Организация,
		|	ВЫБОР
		|		КОГДА БанковскиеСчета.Ссылка ЕСТЬ NULL 
		|			ТОГДА ВТ_Бухгалтерия.СчетНаименование
		|		ИНАЧЕ БанковскиеСчета.Ссылка
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_Бухгалтерия.ВидОперации = 5
		|			ТОГДА ""Перевод""
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВР_Инфо.Получатель ЕСТЬ NULL 
		|					ТОГДА ""Прочие""
		|				ИНАЧЕ ВР_Инфо.Получатель
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА БанковскиеСчета.Ссылка ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Контрагент,
		|	ОтсутствуютДанные";

		
		Запрос.МенеджерВременныхТаблиц = ЗапросВТ.МенеджерВременныхТаблиц;
		
		Результат = Запрос.Выполнить().Выгрузить();

		ПлатежиИзБухгалтерии.Загрузить(Результат);
		
	
КонецПроцедуры
//конец Дима

////Дима 03.12.2014 15:13:59////Загрузка остатков из бухгалтерии для ДДС
Процедура ЗагрузкаОстатковИзБухгалтерии(АдресСтруктурыПодключений, ПериодЗагрузки, СписокБаз) Экспорт
	Перем соединение;
	
	СтруктураПодключений = ПолучитьИзВременногоХранилища(АдресСтруктурыПодключений);
	
	ТЗcom = ПолучитьТаблицуЗагрузки();
 	
	Для Каждого база из СписокБаз Цикл
		
		Если НЕ база.Пометка Тогда
			продолжить;
		ИначеЕсли НЕ СтруктураПодключений.Свойство(база, соединение) Тогда
			продолжить;
		КонецЕсли;	
		
		
		Запрос = соединение.Подключение.NewObject("Запрос");
		
		Запрос.Текст = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ХозрасчетныйОстатки.Организация.ИНН КАК ОргИНН,
			|	ХозрасчетныйОстатки.Субконто1.НомерСчета КАК НомерСчета,
			|	СУММА(ВЫБОР
			|			КОГДА ХозрасчетныйОстатки.ВалютнаяСуммаОстаток > 0
			|				ТОГДА ХозрасчетныйОстатки.ВалютнаяСуммаОстаток
			|			ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток
			|		КОНЕЦ) КАК Сумма,
			|	ХозрасчетныйОстатки.Субконто1.Банк.Код КАК БИК,
			|	МАКСИМУМ(ХозрасчетныйОстатки.Организация.Наименование) КАК ОргНаименование,
			|	МАКСИМУМ(ХозрасчетныйОстатки.Субконто1.Наименование) КАК СчетНаименование
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет.Код В (""51"", ""52""), , ) КАК ХозрасчетныйОстатки
			|ГДЕ
			|	ВЫБОР
			|			КОГДА ХозрасчетныйОстатки.ВалютнаяСуммаОстаток > 0
			|				ТОГДА ХозрасчетныйОстатки.ВалютнаяСуммаОстаток
			|			ИНАЧЕ ХозрасчетныйОстатки.СуммаОстаток
			|		КОНЕЦ > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОстатки.Организация.ИНН,
			|	ХозрасчетныйОстатки.Субконто1.НомерСчета,
			|	ХозрасчетныйОстатки.Субконто1.Банк.Код";	
			
		
		Запрос.УстановитьПараметр("Период",	ПериодЗагрузки.ДатаНачала);		
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
					
			запись = ТЗcom.Добавить();
			
			запись.ТипОрганизации = соединение.ТипОрганизации;
			запись.День = ПериодЗагрузки.ДатаНачала;
			
			ЗаполнитьЗначенияСвойств(запись, Выборка);
			
		КонецЦикла;
		
	КонецЦикла;	
	
	//Очистим организации в ТЗcom
	ТЗcom.Колонки.ОргИнн.Имя = "Инн";
	ОбщийМодульСервер.ПроверкаОрганизацийНаСоотвествие(ТЗcom);
	ТЗcom.Колонки.Инн.Имя = "ОргИнн";
	ТЗcom.Колонки.Ссылка.Имя = "Организация";
		
	//Передадим полученную ТЗcom в запрос 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗcom.НомерСчета,
	               |	ТЗcom.БИК,
	               |	ТЗcom.Сумма,
	               |	ТЗcom.День,
	               |	ТЗcom.СчетНаименование,
	               |	ТЗcom.Организация
	               |ПОМЕСТИТЬ ВТ_ОстаткиВнешнихБаз
	               |ИЗ
	               |	&ТЗcom КАК ТЗcom
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВЫБОР
	               |		КОГДА БанковскиеСчета.Ссылка ЕСТЬ NULL 
	               |			ТОГДА ВТ_ОстаткиВнешнихБаз.СчетНаименование
	               |		ИНАЧЕ БанковскиеСчета.Ссылка
	               |	КОНЕЦ КАК СчетОрганизации,
	               |	ВТ_ОстаткиВнешнихБаз.Сумма,
	               |	ЗНАЧЕНИЕ(Перечисление.ТипДвиженияДДС.ОстатокНаНачало) КАК ТипДвижения,
	               |	ВТ_ОстаткиВнешнихБаз.День КАК Дата,
	               |	ВТ_ОстаткиВнешнихБаз.Организация,
	               |	ВЫБОР
	               |		КОГДА БанковскиеСчета.Ссылка ЕСТЬ NULL 
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ОтсутствуютДанные
	               |ИЗ
	               |	ВТ_ОстаткиВнешнихБаз КАК ВТ_ОстаткиВнешнихБаз
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	               |		ПО ВТ_ОстаткиВнешнихБаз.НомерСчета = БанковскиеСчета.НомерСчета
	               |			И ВТ_ОстаткиВнешнихБаз.БИК = БанковскиеСчета.БИК
	               |			И ВТ_ОстаткиВнешнихБаз.Организация = БанковскиеСчета.Владелец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ОтсутствуютДанные";
	
	Запрос.УстановитьПараметр("ТЗcom", ТЗcom);
	
	ПлатежиИзБухгалтерии.Загрузить(Запрос.Выполнить().Выгрузить());
	                                                                    	
КонецПроцедуры
//конец Дима

////Дима 20.01.2015 17:24:34////Создание в бухгалтерских базах документов оплат
Процедура СоздатьППвБухгалтерии(АдресСтруктурыПодключений, МассивСоздание, СписокБаз) Экспорт
	Перем соединение;
	
	СтруктураПодключений = ПолучитьИзВременногоХранилища(АдресСтруктурыПодключений);
		
	Для Каждого база из СписокБаз Цикл
		
		Если НЕ СтруктураПодключений.Свойство(база, соединение) Тогда
			продолжить;
		КонецЕсли;	
		
		//Поищем аналогичные документы в Бухгалтерии
		Запрос = соединение.Подключение.NewObject("Запрос");
		Запрос.Текст = "ВЫБРАТЬ
					|	ТЗ.ОргИнн,
					|	ТЗ.КонтИнн,
					|	ТЗ.ДоговорНомер,
					|	ТЗ.ОргНомерСчета,
					|	ТЗ.КонтНомерСчета,
					|	ТЗ.Сумма,
					|	ТЗ.Дата,
					|	ТЗ.НомерСтроки
					|ПОМЕСТИТЬ ВТ_создать
					|ИЗ
					|	&ТЗ КАК ТЗ
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	МАКСИМУМ(ПлатежноеПоручение.Дата) КАК Дата,
					|	ВТ_создать.ОргИнн,
					|	ВТ_создать.КонтИнн,
					|	ВТ_создать.ДоговорНомер
					|ПОМЕСТИТЬ ВТ_последняяПП
					|ИЗ
					|	ВТ_создать КАК ВТ_создать
					|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
					|		ПО ВТ_создать.ОргИнн = ПлатежноеПоручение.Организация.ИНН
					|			И ВТ_создать.КонтИнн = ПлатежноеПоручение.Контрагент.ИНН
					|			И ВТ_создать.ДоговорНомер = ПлатежноеПоручение.ДоговорКонтрагента.Номер
					|ГДЕ
					|	ПлатежноеПоручение.Проведен = ИСТИНА
					|	И ПлатежноеПоручение.ПометкаУдаления = ЛОЖЬ
					|
					|СГРУППИРОВАТЬ ПО
					|	ВТ_создать.ОргИнн,
					|	ВТ_создать.КонтИнн,
					|	ВТ_создать.ДоговорНомер
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВТ_создать.ОргИнн,
					|	ВТ_создать.КонтИнн,
					|	ВТ_создать.ДоговорНомер,
					|	ВТ_создать.ОргНомерСчета,
					|	ВТ_создать.КонтНомерСчета,
					|	ВТ_создать.Сумма,
					|	ВТ_создать.Дата,
					|	ВТ_создать.НомерСтроки,
					|	ПлатежноеПоручение.Ссылка
					|ИЗ
					|	ВТ_создать КАК ВТ_создать
					|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_последняяПП КАК ВТ_последняяПП
					|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
					|			ПО ВТ_последняяПП.ОргИнн = ПлатежноеПоручение.Организация.ИНН
					|				И ВТ_последняяПП.КонтИнн = ПлатежноеПоручение.Контрагент.ИНН
					|				И ВТ_последняяПП.ДоговорНомер = ПлатежноеПоручение.ДоговорКонтрагента.Номер
					|				И ВТ_последняяПП.Дата = ПлатежноеПоручение.Дата
					|		ПО ВТ_создать.ОргИнн = ВТ_последняяПП.ОргИнн
					|			И ВТ_создать.КонтИнн = ВТ_последняяПП.КонтИнн
					|			И ВТ_создать.ДоговорНомер = ВТ_последняяПП.ДоговорНомер";
					
							
		ТЗ = соединение.Подключение.NewObject("ТаблицаЗначений");
		
		КЧ = соединение.Подключение.NewObject("КвалификаторыЧисла","15","2");
		КС = соединение.Подключение.NewObject("КвалификаторыСтроки","100");
		КД = соединение.Подключение.NewObject("КвалификаторыДаты"); 
		ТипДанныхЧисло = соединение.Подключение.NewObject("ОписаниеТипов", "Число", КЧ); 
		ТипДанныхСтрока = соединение.Подключение.NewObject("ОписаниеТипов", "Строка", КС); 
		ТипДанныхДата = соединение.Подключение.NewObject("ОписаниеТипов", "Дата", КД); 
		
		ТЗ.Колонки.Добавить("ОргИнн", ТипДанныхСтрока);
		ТЗ.Колонки.Добавить("КонтИнн", ТипДанныхСтрока); 									 
		ТЗ.Колонки.Добавить("ДоговорНомер", ТипДанныхСтрока);
		ТЗ.Колонки.Добавить("ОргНомерСчета", ТипДанныхСтрока); 									 
		ТЗ.Колонки.Добавить("КонтНомерСчета", ТипДанныхСтрока); 									 
		ТЗ.Колонки.Добавить("Сумма", ТипДанныхЧисло);
		ТЗ.Колонки.Добавить("Дата", ТипДанныхДата);
		ТЗ.Колонки.Добавить("НомерСтроки", ТипДанныхЧисло);

		
		
		Для Каждого строка из МассивСоздание Цикл
			
			Если строка.Организация.ТипОрганизации <> база.значение Тогда
				продолжить;
			КонецЕсли;	
			
			запись = ТЗ.Добавить();
			запись.ОргИнн = строка.Организация.Инн;
			запись.КонтИнн = строка.Контрагент.Инн;
			запись.ДоговорНомер = строка.ДоговорыКонтрагентов.Номер;
			запись.ОргНомерСчета = строка.СчетОрганизации.НомерСчета;
			запись.КонтНомерСчета = строка.СчетКонтрагента.НомерСчета;
			запись.Сумма = строка.Сумма;
			запись.Дата = строка.Дата;
			запись.НомерСтроки = строка.НомерСтроки;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ТЗ", ТЗ);
		
		
		//Создадим документы в Бухгалтерии
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СоздатьДокументНаОсновании(Выборка, соединение.Подключение);
		КонецЦикла;	
		
		
	КонецЦикла;
	

КонецПроцедуры

Процедура СоздатьДокументНаОсновании(Основание, База)
	
	//Проверим существование аналогичного документа
	Попытка
		Документ = Основание.Ссылка.ПолучитьОбъект();
	Исключение
		ОповеститьПользователя(Основание.НомерСтроки, "Не было аналогичных платежей...");
		возврат;
    КонецПопытки;
		
	//Проверим существование счетов рассчета
	СчетОрганизации = База.Справочники.БанковскиеСчета.НайтиПоРеквизиту("НомерСчета", Основание.ОргНомерСчета, ,Документ.Организация);
	СчетКонтрагента = База.Справочники.БанковскиеСчета.НайтиПоРеквизиту("НомерСчета", Основание.КонтНомерСчета, ,Документ.Контрагент);
	ПустойСчет = База.Справочники.БанковскиеСчета.ПустаяСсылка();
	
	Если СчетОрганизации = ПустойСчет Тогда
		ОповеститьПользователя(Основание.НомерСтроки, "Не найден счёт организации");
		возврат;
	ИначеЕсли СчетКонтрагента = ПустойСчет Тогда
		ОповеститьПользователя(Основание.НомерСтроки, "Не найден счёт контрагента");
		возврат;
    КонецЕсли;

	
	//Заполним реквизиты и запишем документ	
	НовыйДокумент = Документ.Скопировать();
	НовыйДокумент.СчетОрганизации = СчетОрганизации;
	НовыйДокумент.СчетКонтрагента = СчетКонтрагента;
	НовыйДокумент.Дата = Основание.Дата;
	НовыйДокумент.СуммаДокумента = Основание.Сумма;
	НовыйДокумент.ПересчитатьСуммуНДС();
	НовыйДокумент.Записать();
	
	ОповеститьПользователя(Основание.НомерСтроки, "Не найден счёт контрагента");
		
КонецПроцедуры

Процедура ОповеститьПользователя(НомерСтроки, ТекстСообщения)

  ОбщийМодульСервер.ДобавитьСоообщениеВмассив(,ТекстСообщения, ,"Объект.ПлатежиВБухгалтерию["+строка(НомерСтроки-1)+"].НомерСтроки");	

КонецПроцедуры
//конец Дима


////Дима 13.03.2015 13:51:05////Создание в базе документов оплат зарубежным контрагентам
Процедура СоздатьВалютныеППвБазе() Экспорт

	ТЗ = ПлатежиВбухгалтерию.Выгрузить();
	ТЗ.Свернуть("Дата,Организация,Контрагент,СчетКонтрагента", "Сумма");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.Дата,
	               |	ТЗ.Организация КАК Организация,
	               |	ТЗ.Контрагент КАК Контрагент,
	               |	ТЗ.СчетКонтрагента,
	               |	ТЗ.Сумма
	               |ПОМЕСТИТЬ ВалютныеПереводы
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВалютныеПереводы.Дата,
	               |	ВалютныеПереводы.Организация,
	               |	ВалютныеПереводы.Контрагент,
	               |	ВалютныеПереводы.СчетКонтрагента,
	               |	ВалютныеПереводы.Сумма,
	               |	ТаможняРассчёты.Ссылка
	               |ИЗ
	               |	ВалютныеПереводы КАК ВалютныеПереводы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТаможняРассчёты КАК ТаможняРассчёты
	               |		ПО ВалютныеПереводы.Организация = ТаможняРассчёты.Организация
	               |			И ВалютныеПереводы.СчетКонтрагента = ТаможняРассчёты.СчетКонтрагента
	               |			И (НАЧАЛОПЕРИОДА(ВалютныеПереводы.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ТаможняРассчёты.Дата, ДЕНЬ))
	               |			И ((ВЫРАЗИТЬ(ВалютныеПереводы.Контрагент КАК Справочник.Контрагенты)) = ТаможняРассчёты.Контрагент)
	               |ГДЕ
	               |	ВЫРАЗИТЬ(ВалютныеПереводы.Контрагент КАК Справочник.Контрагенты).ВалютныйРассчёт = ИСТИНА
	               |	И (ТаможняРассчёты.ПометкаУдаления = ЛОЖЬ
	               |			ИЛИ ТаможняРассчёты.ПометкаУдаления ЕСТЬ NULL )";
				   
				   
	Запрос.УстановитьПараметр("ТЗ", ТЗ);			   
				   
    Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Документ = Выборка.Ссылка.ПолучитьОбъект();
		Иначе
			Документ = Документы.ТаможняРассчёты.СоздатьДокумент();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Документ, Выборка);
		Документ.РучнаяКорректировка = Истина;
		
		Документ.Записать(РежимЗаписиДокумента.Запись);
		
		Если Документ.ПроверитьЗаполнение() Тогда
			Документ.Записать(РежимЗаписиДокумента.Проведение);
			ОбщийМодульСервер.ДобавитьСоообщениеВмассив(Документ, Документ.Номер);
		КонецЕсли;  
		
	КонецЦикла;	
		

КонецПроцедуры

//конец Дима
//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////





//////////////////////////////////////ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ//////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//
	УстановитьПараметрыФункциональныхОпций();
	УстановитьТипВалютногоПлатежа();
	УстановитьВидимостьИЗаголовкиПолей();
	//
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПолучитьДанныеПриходаИзРС();
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Ручная корректировка
	Если ЭтаФорма.Модифицированность И НЕ Объект.РучнаяКорректировка Тогда
		
		Ответ = Вопрос("Объект был изменён. Поставить его на ручную корректировку?", РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.РучнаяКорректировка = Истина;
		Иначе
			Объект.РучнаяКорректировка = Ложь;
		КонецЕсли;	
			
	КонецЕсли;
	
		
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	 ТекущийОбъект.ДополнительныеСвойства.Вставить("ДатаПрихода", ДатаПрихода);
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ЗаполнитьЗначенияСвойств(Элементы.ПодборГТД.ТекущиеДанные, ВыбранноеЗначение);
КонецПроцедуры


&НаСервере
Процедура УстановитьПараметрыФункциональныхОпций()
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВалютныйРассчёт", Объект.Контрагент));
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////



///////////////////КОМАНДЫ ФОРМЫ//////////////////////////////////////
//////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ЗаписьДДС(Команда)
	ПараметрыОткрытияФормы = Новый Структура("Отбор", Новый Структура("НомерПлатежа, КлючПользовательскихНастроек", Объект.Ссылка, "Пустые"));
	ОткрытьФорму("РегистрСведений.ДДС.ФормаСписка", ПараметрыОткрытияФормы, ЭтаФорма);
КонецПроцедуры
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////








//////////////////////////////////////ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьПараметрыФункциональныхОпций();
	
	Объект.ПодборГТД.Очистить();
	
	//
	УстановитьВидимостьИЗаголовкиПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	Объект.ПодборГТД.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаОплатыПриИзменении(Элемент)
	Объект.ПодборГТД.Очистить();
	
	//
	УстановитьВидимостьИЗаголовкиПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.ПодборГТД.Очистить();	
	
	//
	УстановитьВидимостьИЗаголовкиПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыКонтрагентовПриИзменении(Элемент)
	
	Объект.ПодборГТД.Очистить();
	
	//
	УстановитьВидимостьИЗаголовкиПолей();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСрезаИнвойсовПриИзменении(Элемент)
	Объект.ПодборГТД.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПолученоПриИзменении(Элемент)
	
	Если Получено Тогда
		//
		Если Модифицированность Тогда
			Сообщить("Документ ещё не записан!!!");
			Получено = Ложь;
			Возврат;
		КонецЕсли;
		//
		ОповещениеОВводеДаты = Новый ОписаниеОповещения("УстановитьДатуПрихода", ЭтаФорма);
		ПоказатьВводДаты(ОповещениеОВводеДаты, ДатаПрихода);
	Иначе
		ТаблицаБоркина = Объект.Боркин;	
		ЗаписатьДанныеПриходаВРС(Объект.Ссылка, 
		                         Объект.Сумма, 
								 Получено, 
								 ТаблицаБоркина, 
								 ДатаПрихода);
	КонецЕсли;
	
	
	//
	Элементы.ДатаПрихода.Видимость = Получено;
	//
	
	
КонецПроцедуры
//////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////





//////////////////////////////////////ПОДБОР ГТД К ВАЛЮТНЫМ ПЕРЕВОДАМ//////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ПодборГТД(Команда)
	//
	Если НЕ ЗначениеЗаполнено(Объект.Сумма) Тогда
		сообщить("Укажите сумму оплаты!!!");
		возврат;
	КонецЕсли;
	//
	
	ПараметрыПодбора = ПолучитьПараметрыПодбораГТД();
	ОткрытьФорму("Документ.ТаможняРассчёты.Форма.ФормаВыбораГТД", ПараметрыПодбора, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
			
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеОплатыПоГТД(Автозаполнение = Истина) Экспорт

	//
	Если Автозаполнение Тогда
		Объект.ПодборГТД.Очистить();
		ТЗ_Подборка = ПолучитьИзВременногоХранилища(АдресПодборкиГТД);
	Иначе
		ТЗ_Подборка = Объект.ПодборГТД;
	КонецЕсли; 
	//
		
	
	ТребуетсяОплатить = Объект.Сумма;  
	Для каждого строка из ТЗ_Подборка Цикл 
		
		Если Автозаполнение Тогда
			запись = Объект.ПодборГТД.Добавить();
			ЗаполнитьЗначенияСвойств(запись, строка);
		Иначе
			запись = строка;
		КонецЕсли; 
				
		
		Если НЕ ПроверкаКурсов(Объект.ПодборГТД.Индекс(запись)) Тогда
			Если ЗначениеЗаполнено(строка.ГТД) Тогда
				Объект.ПодборГТД.Удалить(Запись);
			КонецЕсли;	
			ОбновитьНераспределеннуюСумму();														   
			Прервать;
		КонецЕсли;
		
		
		Попытка
			КроссКурс = Окр(запись.КурсUSD / запись.КурсВалютыОплаты, 4, РежимОкругления.Окр15как20);
			КроссКурсКрублю = Окр(запись.КурсВалютыОплаты, 4, РежимОкругления.Окр15как20);
		Исключение
			возврат;
		КонецПопытки;			
		//=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>
			
			
		ДоступноВалютаОплаты = Окр(запись.Доступно * КроссКурс, 2, РежимОкругления.Окр15как20);
		
		Если ДоступноВалютаОплаты < ТребуетсяОплатить Тогда
			запись.СуммаВалютаОплаты = ДоступноВалютаОплаты;
			запись.Сумма = запись.Доступно;
			
		ИначеЕсли ДоступноВалютаОплаты = ТребуетсяОплатить Тогда
			запись.СуммаВалютаОплаты = ДоступноВалютаОплаты;
			запись.Сумма = запись.Доступно;
			Прервать;;
			
		Иначе
			запись.СуммаВалютаОплаты = ТребуетсяОплатить;
			запись.Сумма = ?(запись.КурсUSD = 1, ТребуетсяОплатить * КроссКурсКрублю, ТребуетсяОплатить / КроссКурс); 
			Прервать;
		КонецЕсли;	  
		
		ТребуетсяОплатить = ТребуетсяОплатить - ДоступноВалютаОплаты;
		
	КонецЦикла;
	
	ОбновитьНераспределеннуюСумму();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНераспределеннуюСумму()
	
	Нераспределено = Объект.Сумма - Объект.ПодборГТД.Итог("СуммаВалютаОплаты");
	
	Если ЗначениеЗаполнено(Нераспределено) Тогда
		Элементы.Нераспределено.Видимость = Истина;
	Иначе
		Элементы.Нераспределено.Видимость = Ложь;
	КонецЕсли;	  
	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьПараметрыПодбораГТД()
	
	ПараметрыВыбораФормы = Новый Структура;
	//
	ПараметрыВыбораФормы.Вставить("КлючПользовательскихНастроек", "Пустые");
	//
	
	//
	ПараметрыВыбораФормы.Вставить("АдресПодборкиГТД", АдресПодборкиГТД);	
	ПараметрыВыбораФормы.Вставить("Владелец", "ТаможняРассчёты");
	ПараметрыВыбораФормы.Вставить("Документ", Объект.Ссылка);
	ПараметрыВыбораФормы.Вставить("ДатаСреза", Объект.ДатаСрезаИнвойсов);
	ПараметрыВыбораФормы.Вставить("Организация", Объект.Организация);
	ПараметрыВыбораФормы.Вставить("Контрагент", Объект.Контрагент);
	ПараметрыВыбораФормы.Вставить("ВалютаОплаты", Объект.ВалютаОплаты);
	ПараметрыВыбораФормы.Вставить("ДоговорКонтрагента", Объект.ДоговорыКонтрагентов);
	ПараметрыВыбораФормы.Вставить("ДатаДокумента", НачалоДня(Объект.Дата));
	ПараметрыВыбораФормы.Вставить("ВариантРаспределенияПлатежа", Объект.ВариантРаспределенияПлатежа);
	//
	Если ЭтоАдресВременногоХранилища(АдресПодборкиГТД) Тогда
		ПараметрыВыбораФормы.Вставить("АдресПодборкиГТД", АдресПодборкиГТД);	
	Иначе  
		АдресПодборкиГТД = ПоместитьВоВременноеХранилище("", УникальныйИдентификатор);
		ПараметрыВыбораФормы.Вставить("АдресПодборкиГТД", АдресПодборкиГТД);	
	КонецЕсли;  
	//		
	
	
	Возврат ПараметрыВыбораФормы;
	
	
КонецФункции	

&НаКлиенте
Процедура ПодборГТДПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
  Отказ = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ПодборГТДПриИзменении(Элемент)
	РаспределениеОплатыПоГТД(Ложь);
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////





//////////////////////////////////////ВАЛЮТНЫЕ ПЕРЕВОДЫ НЕ С ТАМОЖНИ//////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////
&НаСервере
Процедура УстановитьТипВалютногоПлатежа()
	
  Если Объект.Контрагент.ВалютныйРассчёт 
		                  И Объект.Организация.Родитель <> ПредопределенноеЗначение("Справочник.Организации.Таможни") Тогда
						  
	  ВалютныйПлатёжНеСтаможни = Истина;
	  
  Иначе
	  
	  ВалютныйПлатёжНеСтаможни = Ложь;
	  
  КонецЕсли;	  
  
  Если НЕ ЗначениеЗаполнено(Объект.ВариантРаспределенияПлатежа) Тогда
	  Объект.ВариантРаспределенияПлатежа = ?(ВалютныйПлатёжНеСтаможни, ПредопределенноеЗначение("Перечисление.ВариантРаспределенияПлатежа.Аванс"), 
	                                                                              ПредопределенноеЗначение("Перечисление.ВариантРаспределенияПлатежа.ПоИнвойсу"));
  КонецЕсли;
																			  
																			  
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьВариантРаспределенияПлатежа(РезультатЗакрытия = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт

	Если РезультатЗакрытия = Неопределено Тогда 
		Возврат;
	КонецЕсли;
																
	
	Объект.ВариантРаспределенияПлатежа = РезультатЗакрытия;
		
	//
	УстановитьВидимостьИЗаголовкиПолей();
	
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПлатеж(Команда)
	
	Объект.ПодборГТД.Очистить();
	//
	
	ОповещениеОВыборе = Новый ОписаниеОповещения("УстановитьВариантРаспределенияПлатежа", ЭтаФорма);
	ОткрытьФорму("Перечисление.ВариантРаспределенияПлатежа.ФормаВыбора",,,,,, ОповещениеОВыборе);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИЗаголовкиПолей()

    //
    Элементы.ДатаПрихода.Видимость = Получено;
    //
    
    
	//
	Элементы.Получено.Видимость = Объект.Контрагент.ВалютныйРассчёт;
	Элементы.ГруппаПодбораИнвойсов.Видимость = Объект.Контрагент.ВалютныйРассчёт;
	//
	
	
	Элементы.ПодборГТДСумма.Заголовок = "Сумма рассчёта в " + строка(Объект.ДоговорыКонтрагентов.Валюта);
	Элементы.ПодборГТДКурсUSD.Заголовок = "Курс валюты рассчёта " + строка(Объект.ДоговорыКонтрагентов.Валюта);
	
	Элементы.ПодборГТДКурсВалютыОплаты.Заголовок = "Курс оплаты " + строка(Объект.ВалютаОплаты);
	Элементы.ПодборГТДСуммаПересчета.Заголовок = "Сумма оплаты в " + строка(Объект.ВалютаОплаты);
	
	Элементы.ПодборГТДРаспределитьПлатеж.Заголовок = строка(Объект.ВариантРаспределенияПлатежа);
	
	Если Объект.ВариантРаспределенияПлатежа = ПредопределенноеЗначение("Перечисление.ВариантРаспределенияПлатежа.Аванс") Тогда
		Элементы.ПодборГТДГТД.Видимость = Ложь;
		Элементы.ПодборГТДДобавить.Доступность = Ложь;
		Элементы.ПодборГТДДатаИнвойса.Заголовок = "Дата курса";
		Элементы.ПодборГТДПодборГТД.Заголовок = "Заполнить...";
		Элементы.ДатаСрезаИнвойсов.Видимость = Ложь;
	Иначе
		Элементы.ПодборГТДГТД.Видимость = Истина;
		//Элементы.ПодборГТДДобавить.Доступность = Истина;
		Элементы.ПодборГТДДатаИнвойса.Заголовок = ?(Объект.ВариантРаспределенияПлатежа = ПредопределенноеЗначение("Перечисление.ВариантРаспределенияПлатежа.ПоИнвойсу"),
		                                                                                                                                    "Дата инвойса", "Дата курса");
		Элементы.ПодборГТДПодборГТД.Заголовок = "Подобрать ГТД...";
		
		Элементы.ДатаСрезаИнвойсов.Видимость = Истина;
		
	КонецЕсли;

КонецПроцедуры


//=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>//



&НаСервереБезКонтекста
Процедура ЗаполнитьВалютуКонтрагента(Валюта, Контрагент)
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Валюта рассчётов");
	МассивСвойств = Новый Массив;
	МассивСвойств.Добавить(Свойство);
	
	ТЗсвойства = УправлениеСвойствами.ПолучитьЗначенияСвойств(Контрагент, Ложь,, МассивСвойств);
	
	Если ТЗсвойства.Количество() > 0 Тогда
	  Валюта = ТЗсвойства[0].Значение;	
	КонецЕсли;  

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьКурсыРассчётов()

	Объект.ПодборГТД.Очистить();
	
	запись = Объект.ПодборГТД.Добавить();
	
	
	Если Объект.ВалютаОплаты.Код <> "643" Тогда  
	  запись.КурсВалютыОплаты = РегистрыСведений.КурсыВалют.Получить(НачалоДня(Объект.Дата), 
	                                                                       Новый Структура("Валюта", Объект.ВалютаОплаты)).Курс;
	Иначе
       запись.КурсВалютыОплаты = 1;
	КонецЕсли;   
																		   
																		   
	
	Если Объект.ДоговорыКонтрагентов.Валюта.Код <> "643" Тогда
	  запись.КурсUSD = РегистрыСведений.КурсыВалют.Получить(НачалоДня(Объект.Дата),
	                                                              Новый Структура("Валюта", Объект.ДоговорыКонтрагентов)).Курс;
	Иначе
      запись.КурсUSD = 1;
	КонецЕсли;  
																  
																  
																  
    запись.ДатаИнвойса = Объект.Дата;
	запись.СуммаВалютаОплаты = Объект.Сумма;	
	
КонецПроцедуры

&НаКлиенте
Функция ПроверкаКурсов(ИндексСтроки)

	Если НЕ ЗначениеЗаполнено(Объект.ПодборГТД[ИндексСтроки].КурсUSD) 
		                                      ИЛИ НЕ ЗначениеЗаполнено(Объект.ПодборГТД[ИндексСтроки].КурсВалютыОплаты) Тогда
											  
		ОбщийМодульКлиент.ДобавитьСоообщениеВмассив(, "Проверьте курсы валют!!!", , "Объект.ПодборГТД[" +
			                                                                       ИндексСтроки + "].ДатаИнвойса");									 
		возврат Ложь;																		   
																				   
	Иначе
		
		возврат Истина;
		
	КонецЕсли;	
	

КонецФункции


//////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////









//////////////////////////////////////ОТПРАВКИ НА БОРКИНА//////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура БоркинПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Получено1 = Ложь;
		ТекущаяСумма = Элемент.ТекущиеДанные.Сумма;
		Элемент.ТекущиеДанные.Сумма = Объект.Сумма - (Объект.Боркин.Итог("Сумма") - ТекущаяСумма);
		Элемент.ТекущиеДанные.Валюта = Объект.ВалютаОплаты;
		//
	    Элемент.ТекущиеДанные.IdСтроки = Новый УникальныйИдентификатор;
		//
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура БоркинПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Модифицированность = НЕ НеМодифицировать;
	НеМодифицировать = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура БоркинПолученоПриИзменении(Элемент)
	
	НеМодифицировать = НЕ Модифицированность;
	
	ТаблицаБоркина = Объект.Боркин;	
	ЗаписатьДанныеПриходаВРС(Объект.Ссылка, 
		                         Объект.Сумма, 
		                         Получено, 
		                         ТаблицаБоркина,
		                         ДатаПрихода);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////



#Область ЗаполнениеПрихода

&НаСервереБезКонтекста
Процедура ЗаписатьДанныеПриходаВРС(Документ,
	                               Сумма,
								   Получено,
								   ТаблицаБоркина,
								   ДатаПрихода,
								   ОснОбъект = Неопределено)
	
	РС = РегистрыСведений.ПоступлениеДСЗарубеж.СоздатьНаборЗаписей();
	РС.Отбор.ДокументОплаты.Установить(Документ);
	
	Если Получено Тогда
		Запись = РС.Добавить();
		Запись.ДокументОплаты = Документ;
		Запись.ДатаПрихода = ДатаПрихода;
		Запись.СуммаПрихода = Сумма;
	КонецЕсли;
	
	
	Для Каждого Строка Из ТаблицаБоркина Цикл
		Если Строка.Получено1 Тогда
			Запись= РС.Добавить();
			Запись.ДокументОплаты = Документ;
			Запись.IDстроки = Строка.IdСтроки;
			Запись.ДатаПрихода = Строка.ДатаПрихода;
			Запись.СуммаПрихода = Строка.Сумма;
		КонецЕсли;
	КонецЦикла;	
		
	РС.Записать();
	
	//
	Если ОснОбъект <> Неопределено Тогда
		ТекущийОбъект = ДанныеФормыВЗначение(ОснОбъект, Тип("ДокументОбъект.ТаможняРассчёты"));
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ДатаПрихода", ДатаПрихода);
		ДДС_Сервер.ЗаписьВалютногоРассчётаВДДСПриПроведении(ТекущийОбъект, Ложь);
	КонецЕсли;
	//	
	
				
КонецПроцедуры	

&НаСервере
Процедура ПолучитьДанныеПриходаИзРС()
	
  ПустойGuid = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
  
  РС = РегистрыСведений.ПоступлениеДСЗарубеж.СоздатьНаборЗаписей();
  РС.Отбор.ДокументОплаты.Установить(Объект.Ссылка);
  
  РС.Прочитать();
  ТЗприход = РС.Выгрузить();
  Для Каждого Запись Из ТЗприход Цикл
	  
	  Если Запись.IdСтроки = ПустойGuid Тогда
		  Получено = Истина;
		  ДатаПрихода = Запись.ДатаПрихода;
	  Иначе
		  СтрокаБоркина = Объект.Боркин.НайтиСтроки(Новый Структура("IdСтроки", Запись.IdСтроки));
		  СтрокаБоркина[0].Получено1 = Истина;
	  КонецЕсли;	  
	  
  КонецЦикла;
  
                            
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьДатуПрихода(Дата, ДополнительныеПараметры) Экспорт
	
	Если Дата = Неопределено Тогда
		Получено = Ложь;
		Возврат;
		
	ИначеЕсли Дата = Дата(1, 1, 1) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена дата прихода!!!",, "ДатаПрихода");
		Получено = Ложь;
		Элементы.ДатаПрихода.Видимость = Получено;
		Возврат;
		
	Иначе
		ДатаПрихода = Дата;
	КонецЕсли;  
		
			
	ТаблицаБоркина = Объект.Боркин;
	ОснОбъект = Объект;
	ЗаписатьДанныеПриходаВРС(Объект.Ссылка, Объект.Сумма, Получено, ТаблицаБоркина, ДатаПрихода, ОснОбъект);
	
КонецПроцедуры

#КонецОбласти


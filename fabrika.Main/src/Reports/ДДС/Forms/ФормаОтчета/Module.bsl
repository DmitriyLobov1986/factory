
//////////////////////////////////////ОТКРЫТИЕ ДЕТАЛИЗИРОВАННОГО ОТЧЁТА ПО РЕЕСТРУ ПЛАТЕЖЕЙ//////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура Расш1_ОтборОрганизацийРеестра(Команда)
	
	ОповещениеВыбораТипаОрганизации = Новый ОписаниеОповещения("УстановитьОтборИзРеестраНаКлиенте", ЭтаФорма);
	ПарамФормы = Новый Структура("МножественныйВыбор", Истина);
	ОткрытьФорму("Перечисление.ТипОрганизации.ФормаВыбора", ПарамФормы,,,,, ОповещениеВыбораТипаОрганизации);
			
КонецПроцедуры



&НаКлиенте
Процедура УстановитьОтборИзРеестраНаКлиенте(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	
	СписокБаз = Новый СписокЗначений;
	СписокБаз.ЗагрузитьЗначения(Результат);
	
	
	//Получим организации и период реестра
	Если НЕ УстановитьОтборИзРеестраНаСервере(СписокБаз) Тогда
		Сообщить("Не удалось получить данные реестра платежей!!!");
		Возврат;
	КонецЕсли;	
	
	
	//
	РезультатДляРедактирования.Очистить();
	РезультатДляРедактирования_1.Очистить();
	//=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>
	Элементы.МакетРедактирования.Видимость = Истина;
	Элементы.ВидДетализации1.Видимость = Истина;
	Элементы.ОтборОрганизаций.Видимость = Истина;
	ВидДетализации = 1;
	ВидДетализацииПриИзменении(Неопределено);
	СвернутьГруппировки(Неопределено);
	
	
	
КонецПроцедуры	


&НаСервере
Функция УстановитьОтборИзРеестраНаСервере(СписокБаз)

	СписокОрганизаций.Очистить();
	СписокПериодов.Очистить();
	
	Попытка
		ТЗ_Реестр = ПолучитьИзВременногоХранилища(АдресДетализации);
		ТЗ_Реестр_Фильтр = ОбщийМодульСервер.ПолучитьСложныйОтборТЗ(ТЗ_Реестр, "ТипОрганизации", ВидСравнения.ВСписке,, СписокБаз);
		//
		Организации = ТЗ_Реестр_Фильтр.Скопировать(, "Организация");
		//
		Организации.Свернуть("Организация");
		СписокОрганизаций.ЗагрузитьЗначения(Организации.ВыгрузитьКолонку("Организация"));
		//
		СтандартныйПериод = Новый СтандартныйПериод;
		СтандартныйПериод.ДатаНачала = НачалоДня(ТекущаяДата());
		СтандартныйПериод.ДатаОкончания = КонецДня(ТекущаяДата());
		//
		СписокПериодов.Вставить(0, СтандартныйПериод);		
		
		Возврат Истина;
		
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;	  
		
			

КонецФункции // УстановитьОтборИзРеестра()

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



#Область Задолженности


&НаКлиенте
Процедура Расш1_ЗадолженностиПосле(Команда)
	
	Идентификатор = Элементы.Результат.ТекущаяОбласть.Расшифровка;
	ПоляРасшифровки = ОбщийМодульСервер.ПолучениеРасшифровкиВСтруктуру(Идентификатор, ДанныеРасшифровки, Новый Структура);
	
	Если Не ПоляРасшифровки.Свойство("Организация") Тогда
		Предупреждение("Не выбрана организация!!!!!");
		Возврат;
	КонецЕсли;
	
	
	//=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>
	Отбор = Новый Структура;
			
	ПериодОтчета = Новый СтандартныйПериод;
	ПериодОтчета.ДатаНачала = НачалоКвартала(ТекущаяДата());
	ПериодОтчета.ДатаОкончания = НачалоДня(ТекущаяДата());
	
	//=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>
		
	КлючВарианта = "ДляДДС";
	
	//=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>
	
	//Отбор.Вставить("Период", ПериодОтчета);
	Отбор.Вставить("ПлановаяЗадолженность", Истина);
	
	//=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>=>
	
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	ПараметрыФормы.Вставить("Контрагент", ПоляРасшифровки.Организация);
	ПараметрыФормы.Вставить("Период", ПериодОтчета);
	ПараметрыФормы.Вставить("КлючВарианта", КлючВарианта);
			
	ОткрытьФорму("Отчет.ЗадолженностиПоТовару.Форма.ФормаОтчета", ПараметрыФормы, ЭтаФорма, Истина, ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры











#КонецОбласти


#Область ОтправитьПисьмо

&НаКлиенте
Процедура Расш1_ОтправитьПисьмо(Команда)
	
	СписокПолучателей = Новый СписокЗначений;
	СписокПолучателей.Добавить("sas@pochtavip.com, konstantin.charchyan@pochtavip.com", "Смирнов Александр Станиславович");
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("УстановитьПолучателя", ЭтаФорма, ЭтаФорма[ЭтаФорма.ТекущийЭлемент.Имя]);
		
	Если СтрНайти(ЭтаФорма.ТекущийЭлемент.Имя, "Результат") > 0 Тогда  
		ПоказатьВыборИзМеню(ОповещениеОЗакрытии, СписокПолучателей, ЭтаФорма.ТекущийЭлемент);
	Иначе
		Возврат;
	КонецЕсли;  
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьПолучателя(Получатель, ДополнительныеПараметры) Экспорт
	
	//
	Если Получатель = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Расш1_ОтправитьПисьмоНаСервере(Получатель.Значение, ДополнительныеПараметры)
	//
	
	
КонецПроцедуры	


&НаСервереБезКонтекста
Процедура Расш1_ОтправитьПисьмоНаСервере(Получатель, Результат)
	
	
	//
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("XLS");
	Результат.Записать(ИмяВременногоФайла, ТипФайлаТабличногоДокумента.XLS);
	//	
	
	
	Вложения = Новый Соответствие;
	Вложения.Вставить("Транзит.XLS", Новый ДвоичныеДанные(ИмяВременногоФайла));
	
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Кому", Получатель);
	ПараметрыПисьма.Вставить("Тема", "Транзит");
	ПараметрыПисьма.Вставить("Тело", "");
	ПараметрыПисьма.Вставить("Вложения", Вложения);
	
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("Фабрика");
	
	//
	Попытка
		РаботаСПочтовымиСообщениями.ОтправитьСообщение(УчетнаяЗапись, ПараметрыПисьма);  
		Сообщить("Письмо отправлено!!!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	
	//
	УдалитьФайлы(ИмяВременногоФайла);
	
	
	
КонецПроцедуры



#КонецОбласти